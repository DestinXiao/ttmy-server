// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TtmyFishingChallengeMessage.proto

package com.maple.game.osee.proto.fishing;

public final class TtmyFishingChallengeMessage {
  private TtmyFishingChallengeMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FishingChallengeRoomInfoProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    boolean hasRoomCode();
    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    int getRoomCode();

    /**
     * <code>repeated string headImg = 2;</code>
     *
     * <pre>
     * 房间内所有玩家头像
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getHeadImgList();
    /**
     * <code>repeated string headImg = 2;</code>
     *
     * <pre>
     * 房间内所有玩家头像
     * </pre>
     */
    int getHeadImgCount();
    /**
     * <code>repeated string headImg = 2;</code>
     *
     * <pre>
     * 房间内所有玩家头像
     * </pre>
     */
    java.lang.String getHeadImg(int index);
    /**
     * <code>repeated string headImg = 2;</code>
     *
     * <pre>
     * 房间内所有玩家头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadImgBytes(int index);

    /**
     * <code>optional int32 boss = 3;</code>
     *
     * <pre>
     * 房间内是否有Boss 0-无 1-有
     * </pre>
     */
    boolean hasBoss();
    /**
     * <code>optional int32 boss = 3;</code>
     *
     * <pre>
     * 房间内是否有Boss 0-无 1-有
     * </pre>
     */
    int getBoss();

    /**
     * <code>optional bool vip = 4;</code>
     *
     * <pre>
     * 是否是VIP房间
     * </pre>
     */
    boolean hasVip();
    /**
     * <code>optional bool vip = 4;</code>
     *
     * <pre>
     * 是否是VIP房间
     * </pre>
     */
    boolean getVip();

    /**
     * <code>optional bool verify = 5;</code>
     *
     * <pre>
     * 房间是否需要密码
     * </pre>
     */
    boolean hasVerify();
    /**
     * <code>optional bool verify = 5;</code>
     *
     * <pre>
     * 房间是否需要密码
     * </pre>
     */
    boolean getVerify();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto}
   *
   * <pre>
   * 捕鱼挑战赛房间信息协议
   * </pre>
   */
  public static final class FishingChallengeRoomInfoProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto)
      FishingChallengeRoomInfoProtoOrBuilder {
    // Use FishingChallengeRoomInfoProto.newBuilder() to construct.
    private FishingChallengeRoomInfoProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeRoomInfoProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeRoomInfoProto defaultInstance;
    public static FishingChallengeRoomInfoProto getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeRoomInfoProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeRoomInfoProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomCode_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                headImg_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              headImg_.add(bs);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              boss_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              vip_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              verify_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          headImg_ = headImg_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomInfoProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomInfoProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeRoomInfoProto> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeRoomInfoProto>() {
      public FishingChallengeRoomInfoProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeRoomInfoProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeRoomInfoProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ROOMCODE_FIELD_NUMBER = 1;
    private int roomCode_;
    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    public boolean hasRoomCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    public int getRoomCode() {
      return roomCode_;
    }

    public static final int HEADIMG_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList headImg_;
    /**
     * <code>repeated string headImg = 2;</code>
     *
     * <pre>
     * 房间内所有玩家头像
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getHeadImgList() {
      return headImg_;
    }
    /**
     * <code>repeated string headImg = 2;</code>
     *
     * <pre>
     * 房间内所有玩家头像
     * </pre>
     */
    public int getHeadImgCount() {
      return headImg_.size();
    }
    /**
     * <code>repeated string headImg = 2;</code>
     *
     * <pre>
     * 房间内所有玩家头像
     * </pre>
     */
    public java.lang.String getHeadImg(int index) {
      return headImg_.get(index);
    }
    /**
     * <code>repeated string headImg = 2;</code>
     *
     * <pre>
     * 房间内所有玩家头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadImgBytes(int index) {
      return headImg_.getByteString(index);
    }

    public static final int BOSS_FIELD_NUMBER = 3;
    private int boss_;
    /**
     * <code>optional int32 boss = 3;</code>
     *
     * <pre>
     * 房间内是否有Boss 0-无 1-有
     * </pre>
     */
    public boolean hasBoss() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 boss = 3;</code>
     *
     * <pre>
     * 房间内是否有Boss 0-无 1-有
     * </pre>
     */
    public int getBoss() {
      return boss_;
    }

    public static final int VIP_FIELD_NUMBER = 4;
    private boolean vip_;
    /**
     * <code>optional bool vip = 4;</code>
     *
     * <pre>
     * 是否是VIP房间
     * </pre>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool vip = 4;</code>
     *
     * <pre>
     * 是否是VIP房间
     * </pre>
     */
    public boolean getVip() {
      return vip_;
    }

    public static final int VERIFY_FIELD_NUMBER = 5;
    private boolean verify_;
    /**
     * <code>optional bool verify = 5;</code>
     *
     * <pre>
     * 房间是否需要密码
     * </pre>
     */
    public boolean hasVerify() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool verify = 5;</code>
     *
     * <pre>
     * 房间是否需要密码
     * </pre>
     */
    public boolean getVerify() {
      return verify_;
    }

    private void initFields() {
      roomCode_ = 0;
      headImg_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      boss_ = 0;
      vip_ = false;
      verify_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomCode_);
      }
      for (int i = 0; i < headImg_.size(); i++) {
        output.writeBytes(2, headImg_.getByteString(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, boss_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, vip_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(5, verify_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomCode_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < headImg_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(headImg_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getHeadImgList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, boss_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, vip_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, verify_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto}
     *
     * <pre>
     * 捕鱼挑战赛房间信息协议
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomInfoProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomInfoProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        headImg_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        boss_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        vip_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        verify_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomInfoProto_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomCode_ = roomCode_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          headImg_ = headImg_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.headImg_ = headImg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.boss_ = boss_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.vip_ = vip_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.verify_ = verify_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.getDefaultInstance()) return this;
        if (other.hasRoomCode()) {
          setRoomCode(other.getRoomCode());
        }
        if (!other.headImg_.isEmpty()) {
          if (headImg_.isEmpty()) {
            headImg_ = other.headImg_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHeadImgIsMutable();
            headImg_.addAll(other.headImg_);
          }
          onChanged();
        }
        if (other.hasBoss()) {
          setBoss(other.getBoss());
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        if (other.hasVerify()) {
          setVerify(other.getVerify());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int roomCode_ ;
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public boolean hasRoomCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public int getRoomCode() {
        return roomCode_;
      }
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public Builder setRoomCode(int value) {
        bitField0_ |= 0x00000001;
        roomCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public Builder clearRoomCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomCode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList headImg_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureHeadImgIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          headImg_ = new com.google.protobuf.LazyStringArrayList(headImg_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string headImg = 2;</code>
       *
       * <pre>
       * 房间内所有玩家头像
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getHeadImgList() {
        return headImg_.getUnmodifiableView();
      }
      /**
       * <code>repeated string headImg = 2;</code>
       *
       * <pre>
       * 房间内所有玩家头像
       * </pre>
       */
      public int getHeadImgCount() {
        return headImg_.size();
      }
      /**
       * <code>repeated string headImg = 2;</code>
       *
       * <pre>
       * 房间内所有玩家头像
       * </pre>
       */
      public java.lang.String getHeadImg(int index) {
        return headImg_.get(index);
      }
      /**
       * <code>repeated string headImg = 2;</code>
       *
       * <pre>
       * 房间内所有玩家头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadImgBytes(int index) {
        return headImg_.getByteString(index);
      }
      /**
       * <code>repeated string headImg = 2;</code>
       *
       * <pre>
       * 房间内所有玩家头像
       * </pre>
       */
      public Builder setHeadImg(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHeadImgIsMutable();
        headImg_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string headImg = 2;</code>
       *
       * <pre>
       * 房间内所有玩家头像
       * </pre>
       */
      public Builder addHeadImg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHeadImgIsMutable();
        headImg_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string headImg = 2;</code>
       *
       * <pre>
       * 房间内所有玩家头像
       * </pre>
       */
      public Builder addAllHeadImg(
          java.lang.Iterable<java.lang.String> values) {
        ensureHeadImgIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, headImg_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string headImg = 2;</code>
       *
       * <pre>
       * 房间内所有玩家头像
       * </pre>
       */
      public Builder clearHeadImg() {
        headImg_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string headImg = 2;</code>
       *
       * <pre>
       * 房间内所有玩家头像
       * </pre>
       */
      public Builder addHeadImgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureHeadImgIsMutable();
        headImg_.add(value);
        onChanged();
        return this;
      }

      private int boss_ ;
      /**
       * <code>optional int32 boss = 3;</code>
       *
       * <pre>
       * 房间内是否有Boss 0-无 1-有
       * </pre>
       */
      public boolean hasBoss() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 boss = 3;</code>
       *
       * <pre>
       * 房间内是否有Boss 0-无 1-有
       * </pre>
       */
      public int getBoss() {
        return boss_;
      }
      /**
       * <code>optional int32 boss = 3;</code>
       *
       * <pre>
       * 房间内是否有Boss 0-无 1-有
       * </pre>
       */
      public Builder setBoss(int value) {
        bitField0_ |= 0x00000004;
        boss_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 boss = 3;</code>
       *
       * <pre>
       * 房间内是否有Boss 0-无 1-有
       * </pre>
       */
      public Builder clearBoss() {
        bitField0_ = (bitField0_ & ~0x00000004);
        boss_ = 0;
        onChanged();
        return this;
      }

      private boolean vip_ ;
      /**
       * <code>optional bool vip = 4;</code>
       *
       * <pre>
       * 是否是VIP房间
       * </pre>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool vip = 4;</code>
       *
       * <pre>
       * 是否是VIP房间
       * </pre>
       */
      public boolean getVip() {
        return vip_;
      }
      /**
       * <code>optional bool vip = 4;</code>
       *
       * <pre>
       * 是否是VIP房间
       * </pre>
       */
      public Builder setVip(boolean value) {
        bitField0_ |= 0x00000008;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool vip = 4;</code>
       *
       * <pre>
       * 是否是VIP房间
       * </pre>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vip_ = false;
        onChanged();
        return this;
      }

      private boolean verify_ ;
      /**
       * <code>optional bool verify = 5;</code>
       *
       * <pre>
       * 房间是否需要密码
       * </pre>
       */
      public boolean hasVerify() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool verify = 5;</code>
       *
       * <pre>
       * 房间是否需要密码
       * </pre>
       */
      public boolean getVerify() {
        return verify_;
      }
      /**
       * <code>optional bool verify = 5;</code>
       *
       * <pre>
       * 房间是否需要密码
       * </pre>
       */
      public Builder setVerify(boolean value) {
        bitField0_ |= 0x00000010;
        verify_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool verify = 5;</code>
       *
       * <pre>
       * 房间是否需要密码
       * </pre>
       */
      public Builder clearVerify() {
        bitField0_ = (bitField0_ & ~0x00000010);
        verify_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto)
    }

    static {
      defaultInstance = new FishingChallengeRoomInfoProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto)
  }

  public interface FishingChallengePlayerInfoProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    long getPlayerId();

    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 headIndex = 3;</code>
     *
     * <pre>
     * 头像序号
     * </pre>
     */
    boolean hasHeadIndex();
    /**
     * <code>optional int32 headIndex = 3;</code>
     *
     * <pre>
     * 头像序号
     * </pre>
     */
    int getHeadIndex();

    /**
     * <code>optional string headUrl = 4;</code>
     *
     * <pre>
     * 头像地址
     * </pre>
     */
    boolean hasHeadUrl();
    /**
     * <code>optional string headUrl = 4;</code>
     *
     * <pre>
     * 头像地址
     * </pre>
     */
    java.lang.String getHeadUrl();
    /**
     * <code>optional string headUrl = 4;</code>
     *
     * <pre>
     * 头像地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getHeadUrlBytes();

    /**
     * <code>optional int32 sex = 5;</code>
     *
     * <pre>
     * 性别
     * </pre>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 5;</code>
     *
     * <pre>
     * 性别
     * </pre>
     */
    int getSex();

    /**
     * <code>optional int64 money = 6;</code>
     *
     * <pre>
     * 携带金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 6;</code>
     *
     * <pre>
     * 携带金币
     * </pre>
     */
    long getMoney();

    /**
     * <code>optional int32 seat = 7;</code>
     *
     * <pre>
     * 座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>optional int32 seat = 7;</code>
     *
     * <pre>
     * 座位
     * </pre>
     */
    int getSeat();

    /**
     * <code>optional bool online = 8;</code>
     *
     * <pre>
     * 是否在线
     * </pre>
     */
    boolean hasOnline();
    /**
     * <code>optional bool online = 8;</code>
     *
     * <pre>
     * 是否在线
     * </pre>
     */
    boolean getOnline();

    /**
     * <code>optional int32 vipLevel = 9;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    boolean hasVipLevel();
    /**
     * <code>optional int32 vipLevel = 9;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    int getVipLevel();

    /**
     * <code>optional int32 viewIndex = 10;</code>
     *
     * <pre>
     * 外观序号
     * </pre>
     */
    boolean hasViewIndex();
    /**
     * <code>optional int32 viewIndex = 10;</code>
     *
     * <pre>
     * 外观序号
     * </pre>
     */
    int getViewIndex();

    /**
     * <code>optional int32 batteryLevel = 11;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    boolean hasBatteryLevel();
    /**
     * <code>optional int32 batteryLevel = 11;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    int getBatteryLevel();

    /**
     * <code>optional int32 batteryMult = 12;</code>
     *
     * <pre>
     * 炮台倍数
     * </pre>
     */
    boolean hasBatteryMult();
    /**
     * <code>optional int32 batteryMult = 12;</code>
     *
     * <pre>
     * 炮台倍数
     * </pre>
     */
    int getBatteryMult();

    /**
     * <code>optional int32 level = 13;</code>
     *
     * <pre>
     * 玩家等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 13;</code>
     *
     * <pre>
     * 玩家等级
     * </pre>
     */
    int getLevel();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto}
   *
   * <pre>
   * 捕鱼挑战赛房间玩家信息协议
   * </pre>
   */
  public static final class FishingChallengePlayerInfoProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto)
      FishingChallengePlayerInfoProtoOrBuilder {
    // Use FishingChallengePlayerInfoProto.newBuilder() to construct.
    private FishingChallengePlayerInfoProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengePlayerInfoProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengePlayerInfoProto defaultInstance;
    public static FishingChallengePlayerInfoProto getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengePlayerInfoProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengePlayerInfoProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              headIndex_ = input.readInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              headUrl_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sex_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              money_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              seat_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              online_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              vipLevel_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              viewIndex_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              batteryLevel_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              batteryMult_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              level_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengePlayerInfoProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengePlayerInfoProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengePlayerInfoProto> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengePlayerInfoProto>() {
      public FishingChallengePlayerInfoProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengePlayerInfoProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengePlayerInfoProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HEADINDEX_FIELD_NUMBER = 3;
    private int headIndex_;
    /**
     * <code>optional int32 headIndex = 3;</code>
     *
     * <pre>
     * 头像序号
     * </pre>
     */
    public boolean hasHeadIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 headIndex = 3;</code>
     *
     * <pre>
     * 头像序号
     * </pre>
     */
    public int getHeadIndex() {
      return headIndex_;
    }

    public static final int HEADURL_FIELD_NUMBER = 4;
    private java.lang.Object headUrl_;
    /**
     * <code>optional string headUrl = 4;</code>
     *
     * <pre>
     * 头像地址
     * </pre>
     */
    public boolean hasHeadUrl() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string headUrl = 4;</code>
     *
     * <pre>
     * 头像地址
     * </pre>
     */
    public java.lang.String getHeadUrl() {
      java.lang.Object ref = headUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string headUrl = 4;</code>
     *
     * <pre>
     * 头像地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHeadUrlBytes() {
      java.lang.Object ref = headUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEX_FIELD_NUMBER = 5;
    private int sex_;
    /**
     * <code>optional int32 sex = 5;</code>
     *
     * <pre>
     * 性别
     * </pre>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 sex = 5;</code>
     *
     * <pre>
     * 性别
     * </pre>
     */
    public int getSex() {
      return sex_;
    }

    public static final int MONEY_FIELD_NUMBER = 6;
    private long money_;
    /**
     * <code>optional int64 money = 6;</code>
     *
     * <pre>
     * 携带金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 money = 6;</code>
     *
     * <pre>
     * 携带金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    public static final int SEAT_FIELD_NUMBER = 7;
    private int seat_;
    /**
     * <code>optional int32 seat = 7;</code>
     *
     * <pre>
     * 座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 seat = 7;</code>
     *
     * <pre>
     * 座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    public static final int ONLINE_FIELD_NUMBER = 8;
    private boolean online_;
    /**
     * <code>optional bool online = 8;</code>
     *
     * <pre>
     * 是否在线
     * </pre>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool online = 8;</code>
     *
     * <pre>
     * 是否在线
     * </pre>
     */
    public boolean getOnline() {
      return online_;
    }

    public static final int VIPLEVEL_FIELD_NUMBER = 9;
    private int vipLevel_;
    /**
     * <code>optional int32 vipLevel = 9;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    public boolean hasVipLevel() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 vipLevel = 9;</code>
     *
     * <pre>
     * vip等级
     * </pre>
     */
    public int getVipLevel() {
      return vipLevel_;
    }

    public static final int VIEWINDEX_FIELD_NUMBER = 10;
    private int viewIndex_;
    /**
     * <code>optional int32 viewIndex = 10;</code>
     *
     * <pre>
     * 外观序号
     * </pre>
     */
    public boolean hasViewIndex() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 viewIndex = 10;</code>
     *
     * <pre>
     * 外观序号
     * </pre>
     */
    public int getViewIndex() {
      return viewIndex_;
    }

    public static final int BATTERYLEVEL_FIELD_NUMBER = 11;
    private int batteryLevel_;
    /**
     * <code>optional int32 batteryLevel = 11;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    public boolean hasBatteryLevel() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 batteryLevel = 11;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    public int getBatteryLevel() {
      return batteryLevel_;
    }

    public static final int BATTERYMULT_FIELD_NUMBER = 12;
    private int batteryMult_;
    /**
     * <code>optional int32 batteryMult = 12;</code>
     *
     * <pre>
     * 炮台倍数
     * </pre>
     */
    public boolean hasBatteryMult() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 batteryMult = 12;</code>
     *
     * <pre>
     * 炮台倍数
     * </pre>
     */
    public int getBatteryMult() {
      return batteryMult_;
    }

    public static final int LEVEL_FIELD_NUMBER = 13;
    private int level_;
    /**
     * <code>optional int32 level = 13;</code>
     *
     * <pre>
     * 玩家等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 level = 13;</code>
     *
     * <pre>
     * 玩家等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    private void initFields() {
      playerId_ = 0L;
      name_ = "";
      headIndex_ = 0;
      headUrl_ = "";
      sex_ = 0;
      money_ = 0L;
      seat_ = 0;
      online_ = false;
      vipLevel_ = 0;
      viewIndex_ = 0;
      batteryLevel_ = 0;
      batteryMult_ = 0;
      level_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, headIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getHeadUrlBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, sex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, money_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, seat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, online_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, vipLevel_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, viewIndex_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, batteryLevel_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, batteryMult_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, level_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, headIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getHeadUrlBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, sex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, money_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, seat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, online_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, vipLevel_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, viewIndex_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, batteryLevel_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, batteryMult_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, level_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto}
     *
     * <pre>
     * 捕鱼挑战赛房间玩家信息协议
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengePlayerInfoProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengePlayerInfoProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        headIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        headUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        online_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        vipLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        viewIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        batteryLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        batteryMult_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengePlayerInfoProto_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.headIndex_ = headIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.headUrl_ = headUrl_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.vipLevel_ = vipLevel_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.viewIndex_ = viewIndex_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.batteryLevel_ = batteryLevel_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.batteryMult_ = batteryMult_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.level_ = level_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasHeadIndex()) {
          setHeadIndex(other.getHeadIndex());
        }
        if (other.hasHeadUrl()) {
          bitField0_ |= 0x00000008;
          headUrl_ = other.headUrl_;
          onChanged();
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasVipLevel()) {
          setVipLevel(other.getVipLevel());
        }
        if (other.hasViewIndex()) {
          setViewIndex(other.getViewIndex());
        }
        if (other.hasBatteryLevel()) {
          setBatteryLevel(other.getBatteryLevel());
        }
        if (other.hasBatteryMult()) {
          setBatteryMult(other.getBatteryMult());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      private int headIndex_ ;
      /**
       * <code>optional int32 headIndex = 3;</code>
       *
       * <pre>
       * 头像序号
       * </pre>
       */
      public boolean hasHeadIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 headIndex = 3;</code>
       *
       * <pre>
       * 头像序号
       * </pre>
       */
      public int getHeadIndex() {
        return headIndex_;
      }
      /**
       * <code>optional int32 headIndex = 3;</code>
       *
       * <pre>
       * 头像序号
       * </pre>
       */
      public Builder setHeadIndex(int value) {
        bitField0_ |= 0x00000004;
        headIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 headIndex = 3;</code>
       *
       * <pre>
       * 头像序号
       * </pre>
       */
      public Builder clearHeadIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        headIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object headUrl_ = "";
      /**
       * <code>optional string headUrl = 4;</code>
       *
       * <pre>
       * 头像地址
       * </pre>
       */
      public boolean hasHeadUrl() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string headUrl = 4;</code>
       *
       * <pre>
       * 头像地址
       * </pre>
       */
      public java.lang.String getHeadUrl() {
        java.lang.Object ref = headUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            headUrl_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string headUrl = 4;</code>
       *
       * <pre>
       * 头像地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHeadUrlBytes() {
        java.lang.Object ref = headUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string headUrl = 4;</code>
       *
       * <pre>
       * 头像地址
       * </pre>
       */
      public Builder setHeadUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        headUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string headUrl = 4;</code>
       *
       * <pre>
       * 头像地址
       * </pre>
       */
      public Builder clearHeadUrl() {
        bitField0_ = (bitField0_ & ~0x00000008);
        headUrl_ = getDefaultInstance().getHeadUrl();
        onChanged();
        return this;
      }
      /**
       * <code>optional string headUrl = 4;</code>
       *
       * <pre>
       * 头像地址
       * </pre>
       */
      public Builder setHeadUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        headUrl_ = value;
        onChanged();
        return this;
      }

      private int sex_ ;
      /**
       * <code>optional int32 sex = 5;</code>
       *
       * <pre>
       * 性别
       * </pre>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 sex = 5;</code>
       *
       * <pre>
       * 性别
       * </pre>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 5;</code>
       *
       * <pre>
       * 性别
       * </pre>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000010;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 5;</code>
       *
       * <pre>
       * 性别
       * </pre>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sex_ = 0;
        onChanged();
        return this;
      }

      private long money_ ;
      /**
       * <code>optional int64 money = 6;</code>
       *
       * <pre>
       * 携带金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 money = 6;</code>
       *
       * <pre>
       * 携带金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 6;</code>
       *
       * <pre>
       * 携带金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00000020;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 6;</code>
       *
       * <pre>
       * 携带金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00000020);
        money_ = 0L;
        onChanged();
        return this;
      }

      private int seat_ ;
      /**
       * <code>optional int32 seat = 7;</code>
       *
       * <pre>
       * 座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 seat = 7;</code>
       *
       * <pre>
       * 座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>optional int32 seat = 7;</code>
       *
       * <pre>
       * 座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000040;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat = 7;</code>
       *
       * <pre>
       * 座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000040);
        seat_ = 0;
        onChanged();
        return this;
      }

      private boolean online_ ;
      /**
       * <code>optional bool online = 8;</code>
       *
       * <pre>
       * 是否在线
       * </pre>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool online = 8;</code>
       *
       * <pre>
       * 是否在线
       * </pre>
       */
      public boolean getOnline() {
        return online_;
      }
      /**
       * <code>optional bool online = 8;</code>
       *
       * <pre>
       * 是否在线
       * </pre>
       */
      public Builder setOnline(boolean value) {
        bitField0_ |= 0x00000080;
        online_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool online = 8;</code>
       *
       * <pre>
       * 是否在线
       * </pre>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000080);
        online_ = false;
        onChanged();
        return this;
      }

      private int vipLevel_ ;
      /**
       * <code>optional int32 vipLevel = 9;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public boolean hasVipLevel() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 vipLevel = 9;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public int getVipLevel() {
        return vipLevel_;
      }
      /**
       * <code>optional int32 vipLevel = 9;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public Builder setVipLevel(int value) {
        bitField0_ |= 0x00000100;
        vipLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vipLevel = 9;</code>
       *
       * <pre>
       * vip等级
       * </pre>
       */
      public Builder clearVipLevel() {
        bitField0_ = (bitField0_ & ~0x00000100);
        vipLevel_ = 0;
        onChanged();
        return this;
      }

      private int viewIndex_ ;
      /**
       * <code>optional int32 viewIndex = 10;</code>
       *
       * <pre>
       * 外观序号
       * </pre>
       */
      public boolean hasViewIndex() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 viewIndex = 10;</code>
       *
       * <pre>
       * 外观序号
       * </pre>
       */
      public int getViewIndex() {
        return viewIndex_;
      }
      /**
       * <code>optional int32 viewIndex = 10;</code>
       *
       * <pre>
       * 外观序号
       * </pre>
       */
      public Builder setViewIndex(int value) {
        bitField0_ |= 0x00000200;
        viewIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 viewIndex = 10;</code>
       *
       * <pre>
       * 外观序号
       * </pre>
       */
      public Builder clearViewIndex() {
        bitField0_ = (bitField0_ & ~0x00000200);
        viewIndex_ = 0;
        onChanged();
        return this;
      }

      private int batteryLevel_ ;
      /**
       * <code>optional int32 batteryLevel = 11;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public boolean hasBatteryLevel() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 batteryLevel = 11;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public int getBatteryLevel() {
        return batteryLevel_;
      }
      /**
       * <code>optional int32 batteryLevel = 11;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public Builder setBatteryLevel(int value) {
        bitField0_ |= 0x00000400;
        batteryLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batteryLevel = 11;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public Builder clearBatteryLevel() {
        bitField0_ = (bitField0_ & ~0x00000400);
        batteryLevel_ = 0;
        onChanged();
        return this;
      }

      private int batteryMult_ ;
      /**
       * <code>optional int32 batteryMult = 12;</code>
       *
       * <pre>
       * 炮台倍数
       * </pre>
       */
      public boolean hasBatteryMult() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 batteryMult = 12;</code>
       *
       * <pre>
       * 炮台倍数
       * </pre>
       */
      public int getBatteryMult() {
        return batteryMult_;
      }
      /**
       * <code>optional int32 batteryMult = 12;</code>
       *
       * <pre>
       * 炮台倍数
       * </pre>
       */
      public Builder setBatteryMult(int value) {
        bitField0_ |= 0x00000800;
        batteryMult_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batteryMult = 12;</code>
       *
       * <pre>
       * 炮台倍数
       * </pre>
       */
      public Builder clearBatteryMult() {
        bitField0_ = (bitField0_ & ~0x00000800);
        batteryMult_ = 0;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>optional int32 level = 13;</code>
       *
       * <pre>
       * 玩家等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 level = 13;</code>
       *
       * <pre>
       * 玩家等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional int32 level = 13;</code>
       *
       * <pre>
       * 玩家等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00001000;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 level = 13;</code>
       *
       * <pre>
       * 玩家等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00001000);
        level_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto)
    }

    static {
      defaultInstance = new FishingChallengePlayerInfoProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto)
  }

  public interface FishingChallengeFishInfoProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     * 实例id
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     * 实例id
     * </pre>
     */
    long getId();

    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 鱼配置id
     * </pre>
     */
    boolean hasFishId();
    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 鱼配置id
     * </pre>
     */
    long getFishId();

    /**
     * <code>optional int64 routeId = 3;</code>
     *
     * <pre>
     * 路线id
     * </pre>
     */
    boolean hasRouteId();
    /**
     * <code>optional int64 routeId = 3;</code>
     *
     * <pre>
     * 路线id
     * </pre>
     */
    long getRouteId();

    /**
     * <code>optional float clientLifeTime = 101;</code>
     *
     * <pre>
     *客户端存活时间
     * </pre>
     */
    boolean hasClientLifeTime();
    /**
     * <code>optional float clientLifeTime = 101;</code>
     *
     * <pre>
     *客户端存活时间
     * </pre>
     */
    float getClientLifeTime();

    /**
     * <code>optional int64 createTime = 102;</code>
     *
     * <pre>
     * 创建时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>optional int64 createTime = 102;</code>
     *
     * <pre>
     * 创建时间
     * </pre>
     */
    long getCreateTime();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto}
   *
   * <pre>
   * 捕鱼鱼类数据
   * </pre>
   */
  public static final class FishingChallengeFishInfoProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto)
      FishingChallengeFishInfoProtoOrBuilder {
    // Use FishingChallengeFishInfoProto.newBuilder() to construct.
    private FishingChallengeFishInfoProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeFishInfoProto(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeFishInfoProto defaultInstance;
    public static FishingChallengeFishInfoProto getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeFishInfoProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeFishInfoProto(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fishId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              routeId_ = input.readInt64();
              break;
            }
            case 813: {
              bitField0_ |= 0x00000008;
              clientLifeTime_ = input.readFloat();
              break;
            }
            case 816: {
              bitField0_ |= 0x00000010;
              createTime_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishInfoProto_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishInfoProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeFishInfoProto> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeFishInfoProto>() {
      public FishingChallengeFishInfoProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeFishInfoProto(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeFishInfoProto> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     * 实例id
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 id = 1;</code>
     *
     * <pre>
     * 实例id
     * </pre>
     */
    public long getId() {
      return id_;
    }

    public static final int FISHID_FIELD_NUMBER = 2;
    private long fishId_;
    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 鱼配置id
     * </pre>
     */
    public boolean hasFishId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 鱼配置id
     * </pre>
     */
    public long getFishId() {
      return fishId_;
    }

    public static final int ROUTEID_FIELD_NUMBER = 3;
    private long routeId_;
    /**
     * <code>optional int64 routeId = 3;</code>
     *
     * <pre>
     * 路线id
     * </pre>
     */
    public boolean hasRouteId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 routeId = 3;</code>
     *
     * <pre>
     * 路线id
     * </pre>
     */
    public long getRouteId() {
      return routeId_;
    }

    public static final int CLIENTLIFETIME_FIELD_NUMBER = 101;
    private float clientLifeTime_;
    /**
     * <code>optional float clientLifeTime = 101;</code>
     *
     * <pre>
     *客户端存活时间
     * </pre>
     */
    public boolean hasClientLifeTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float clientLifeTime = 101;</code>
     *
     * <pre>
     *客户端存活时间
     * </pre>
     */
    public float getClientLifeTime() {
      return clientLifeTime_;
    }

    public static final int CREATETIME_FIELD_NUMBER = 102;
    private long createTime_;
    /**
     * <code>optional int64 createTime = 102;</code>
     *
     * <pre>
     * 创建时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 createTime = 102;</code>
     *
     * <pre>
     * 创建时间
     * </pre>
     */
    public long getCreateTime() {
      return createTime_;
    }

    private void initFields() {
      id_ = 0L;
      fishId_ = 0L;
      routeId_ = 0L;
      clientLifeTime_ = 0F;
      createTime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, fishId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, routeId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(101, clientLifeTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(102, createTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, fishId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, routeId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(101, clientLifeTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(102, createTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto}
     *
     * <pre>
     * 捕鱼鱼类数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishInfoProto_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishInfoProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        fishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        routeId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        clientLifeTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishInfoProto_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fishId_ = fishId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.routeId_ = routeId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientLifeTime_ = clientLifeTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.createTime_ = createTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasFishId()) {
          setFishId(other.getFishId());
        }
        if (other.hasRouteId()) {
          setRouteId(other.getRouteId());
        }
        if (other.hasClientLifeTime()) {
          setClientLifeTime(other.getClientLifeTime());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       * 实例id
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       * 实例id
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       * 实例id
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 id = 1;</code>
       *
       * <pre>
       * 实例id
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private long fishId_ ;
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 鱼配置id
       * </pre>
       */
      public boolean hasFishId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 鱼配置id
       * </pre>
       */
      public long getFishId() {
        return fishId_;
      }
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 鱼配置id
       * </pre>
       */
      public Builder setFishId(long value) {
        bitField0_ |= 0x00000002;
        fishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 鱼配置id
       * </pre>
       */
      public Builder clearFishId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fishId_ = 0L;
        onChanged();
        return this;
      }

      private long routeId_ ;
      /**
       * <code>optional int64 routeId = 3;</code>
       *
       * <pre>
       * 路线id
       * </pre>
       */
      public boolean hasRouteId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 routeId = 3;</code>
       *
       * <pre>
       * 路线id
       * </pre>
       */
      public long getRouteId() {
        return routeId_;
      }
      /**
       * <code>optional int64 routeId = 3;</code>
       *
       * <pre>
       * 路线id
       * </pre>
       */
      public Builder setRouteId(long value) {
        bitField0_ |= 0x00000004;
        routeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 routeId = 3;</code>
       *
       * <pre>
       * 路线id
       * </pre>
       */
      public Builder clearRouteId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        routeId_ = 0L;
        onChanged();
        return this;
      }

      private float clientLifeTime_ ;
      /**
       * <code>optional float clientLifeTime = 101;</code>
       *
       * <pre>
       *客户端存活时间
       * </pre>
       */
      public boolean hasClientLifeTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float clientLifeTime = 101;</code>
       *
       * <pre>
       *客户端存活时间
       * </pre>
       */
      public float getClientLifeTime() {
        return clientLifeTime_;
      }
      /**
       * <code>optional float clientLifeTime = 101;</code>
       *
       * <pre>
       *客户端存活时间
       * </pre>
       */
      public Builder setClientLifeTime(float value) {
        bitField0_ |= 0x00000008;
        clientLifeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float clientLifeTime = 101;</code>
       *
       * <pre>
       *客户端存活时间
       * </pre>
       */
      public Builder clearClientLifeTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientLifeTime_ = 0F;
        onChanged();
        return this;
      }

      private long createTime_ ;
      /**
       * <code>optional int64 createTime = 102;</code>
       *
       * <pre>
       * 创建时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 createTime = 102;</code>
       *
       * <pre>
       * 创建时间
       * </pre>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>optional int64 createTime = 102;</code>
       *
       * <pre>
       * 创建时间
       * </pre>
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000010;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 createTime = 102;</code>
       *
       * <pre>
       * 创建时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        createTime_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto)
    }

    static {
      defaultInstance = new FishingChallengeFishInfoProto(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto)
  }

  public interface FishingChallengeRoomListRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeRoomListRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 roomType = 1;</code>
     */
    boolean hasRoomType();
    /**
     * <code>optional int32 roomType = 1;</code>
     */
    int getRoomType();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRoomListRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_ROOM_LIST_REQUEST = 0x10021022; // 挑战赛房间列表请求
   * </pre>
   */
  public static final class FishingChallengeRoomListRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeRoomListRequest)
      FishingChallengeRoomListRequestOrBuilder {
    // Use FishingChallengeRoomListRequest.newBuilder() to construct.
    private FishingChallengeRoomListRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeRoomListRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeRoomListRequest defaultInstance;
    public static FishingChallengeRoomListRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeRoomListRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeRoomListRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeRoomListRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeRoomListRequest>() {
      public FishingChallengeRoomListRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeRoomListRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeRoomListRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ROOMTYPE_FIELD_NUMBER = 1;
    private int roomType_;
    /**
     * <code>optional int32 roomType = 1;</code>
     */
    public boolean hasRoomType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomType = 1;</code>
     */
    public int getRoomType() {
      return roomType_;
    }

    private void initFields() {
      roomType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRoomListRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_ROOM_LIST_REQUEST = 0x10021022; // 挑战赛房间列表请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeRoomListRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomType_ = roomType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest.getDefaultInstance()) return this;
        if (other.hasRoomType()) {
          setRoomType(other.getRoomType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int roomType_ ;
      /**
       * <code>optional int32 roomType = 1;</code>
       */
      public boolean hasRoomType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 roomType = 1;</code>
       */
      public int getRoomType() {
        return roomType_;
      }
      /**
       * <code>optional int32 roomType = 1;</code>
       */
      public Builder setRoomType(int value) {
        bitField0_ |= 0x00000001;
        roomType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomType = 1;</code>
       */
      public Builder clearRoomType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeRoomListRequest)
    }

    static {
      defaultInstance = new FishingChallengeRoomListRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeRoomListRequest)
  }

  public interface FishingChallengeRoomListResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeRoomListResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
     *
     * <pre>
     * 房间列表
     * </pre>
     */
    java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto> 
        getRoomListList();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
     *
     * <pre>
     * 房间列表
     * </pre>
     */
    com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto getRoomList(int index);
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
     *
     * <pre>
     * 房间列表
     * </pre>
     */
    int getRoomListCount();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
     *
     * <pre>
     * 房间列表
     * </pre>
     */
    java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProtoOrBuilder> 
        getRoomListOrBuilderList();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
     *
     * <pre>
     * 房间列表
     * </pre>
     */
    com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProtoOrBuilder getRoomListOrBuilder(
        int index);

    /**
     * <code>optional int32 roomType = 2;</code>
     */
    boolean hasRoomType();
    /**
     * <code>optional int32 roomType = 2;</code>
     */
    int getRoomType();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRoomListResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_ROOM_LIST_RESPONSE = 0x20021022; // 挑战赛房间列表响应
   * </pre>
   */
  public static final class FishingChallengeRoomListResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeRoomListResponse)
      FishingChallengeRoomListResponseOrBuilder {
    // Use FishingChallengeRoomListResponse.newBuilder() to construct.
    private FishingChallengeRoomListResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeRoomListResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeRoomListResponse defaultInstance;
    public static FishingChallengeRoomListResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeRoomListResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeRoomListResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                roomList_ = new java.util.ArrayList<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              roomList_.add(input.readMessage(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              roomType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          roomList_ = java.util.Collections.unmodifiableList(roomList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeRoomListResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeRoomListResponse>() {
      public FishingChallengeRoomListResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeRoomListResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeRoomListResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ROOMLIST_FIELD_NUMBER = 1;
    private java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto> roomList_;
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
     *
     * <pre>
     * 房间列表
     * </pre>
     */
    public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto> getRoomListList() {
      return roomList_;
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
     *
     * <pre>
     * 房间列表
     * </pre>
     */
    public java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProtoOrBuilder> 
        getRoomListOrBuilderList() {
      return roomList_;
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
     *
     * <pre>
     * 房间列表
     * </pre>
     */
    public int getRoomListCount() {
      return roomList_.size();
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
     *
     * <pre>
     * 房间列表
     * </pre>
     */
    public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto getRoomList(int index) {
      return roomList_.get(index);
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
     *
     * <pre>
     * 房间列表
     * </pre>
     */
    public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProtoOrBuilder getRoomListOrBuilder(
        int index) {
      return roomList_.get(index);
    }

    public static final int ROOMTYPE_FIELD_NUMBER = 2;
    private int roomType_;
    /**
     * <code>optional int32 roomType = 2;</code>
     */
    public boolean hasRoomType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomType = 2;</code>
     */
    public int getRoomType() {
      return roomType_;
    }

    private void initFields() {
      roomList_ = java.util.Collections.emptyList();
      roomType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < roomList_.size(); i++) {
        output.writeMessage(1, roomList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, roomType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < roomList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, roomList_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, roomType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRoomListResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_ROOM_LIST_RESPONSE = 0x20021022; // 挑战赛房间列表响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeRoomListResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRoomListFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (roomListBuilder_ == null) {
          roomList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          roomListBuilder_.clear();
        }
        roomType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (roomListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            roomList_ = java.util.Collections.unmodifiableList(roomList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.roomList_ = roomList_;
        } else {
          result.roomList_ = roomListBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomType_ = roomType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse.getDefaultInstance()) return this;
        if (roomListBuilder_ == null) {
          if (!other.roomList_.isEmpty()) {
            if (roomList_.isEmpty()) {
              roomList_ = other.roomList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRoomListIsMutable();
              roomList_.addAll(other.roomList_);
            }
            onChanged();
          }
        } else {
          if (!other.roomList_.isEmpty()) {
            if (roomListBuilder_.isEmpty()) {
              roomListBuilder_.dispose();
              roomListBuilder_ = null;
              roomList_ = other.roomList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              roomListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRoomListFieldBuilder() : null;
            } else {
              roomListBuilder_.addAllMessages(other.roomList_);
            }
          }
        }
        if (other.hasRoomType()) {
          setRoomType(other.getRoomType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomListResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto> roomList_ =
        java.util.Collections.emptyList();
      private void ensureRoomListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          roomList_ = new java.util.ArrayList<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto>(roomList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProtoOrBuilder> roomListBuilder_;

      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto> getRoomListList() {
        if (roomListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roomList_);
        } else {
          return roomListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public int getRoomListCount() {
        if (roomListBuilder_ == null) {
          return roomList_.size();
        } else {
          return roomListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto getRoomList(int index) {
        if (roomListBuilder_ == null) {
          return roomList_.get(index);
        } else {
          return roomListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public Builder setRoomList(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto value) {
        if (roomListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomListIsMutable();
          roomList_.set(index, value);
          onChanged();
        } else {
          roomListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public Builder setRoomList(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder builderForValue) {
        if (roomListBuilder_ == null) {
          ensureRoomListIsMutable();
          roomList_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public Builder addRoomList(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto value) {
        if (roomListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomListIsMutable();
          roomList_.add(value);
          onChanged();
        } else {
          roomListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public Builder addRoomList(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto value) {
        if (roomListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomListIsMutable();
          roomList_.add(index, value);
          onChanged();
        } else {
          roomListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public Builder addRoomList(
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder builderForValue) {
        if (roomListBuilder_ == null) {
          ensureRoomListIsMutable();
          roomList_.add(builderForValue.build());
          onChanged();
        } else {
          roomListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public Builder addRoomList(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder builderForValue) {
        if (roomListBuilder_ == null) {
          ensureRoomListIsMutable();
          roomList_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public Builder addAllRoomList(
          java.lang.Iterable<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto> values) {
        if (roomListBuilder_ == null) {
          ensureRoomListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, roomList_);
          onChanged();
        } else {
          roomListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public Builder clearRoomList() {
        if (roomListBuilder_ == null) {
          roomList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          roomListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public Builder removeRoomList(int index) {
        if (roomListBuilder_ == null) {
          ensureRoomListIsMutable();
          roomList_.remove(index);
          onChanged();
        } else {
          roomListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder getRoomListBuilder(
          int index) {
        return getRoomListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProtoOrBuilder getRoomListOrBuilder(
          int index) {
        if (roomListBuilder_ == null) {
          return roomList_.get(index);  } else {
          return roomListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProtoOrBuilder> 
           getRoomListOrBuilderList() {
        if (roomListBuilder_ != null) {
          return roomListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roomList_);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder addRoomListBuilder() {
        return getRoomListFieldBuilder().addBuilder(
            com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder addRoomListBuilder(
          int index) {
        return getRoomListFieldBuilder().addBuilder(
            index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeRoomInfoProto roomList = 1;</code>
       *
       * <pre>
       * 房间列表
       * </pre>
       */
      public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder> 
           getRoomListBuilderList() {
        return getRoomListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProtoOrBuilder> 
          getRoomListFieldBuilder() {
        if (roomListBuilder_ == null) {
          roomListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomInfoProtoOrBuilder>(
                  roomList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          roomList_ = null;
        }
        return roomListBuilder_;
      }

      private int roomType_ ;
      /**
       * <code>optional int32 roomType = 2;</code>
       */
      public boolean hasRoomType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 roomType = 2;</code>
       */
      public int getRoomType() {
        return roomType_;
      }
      /**
       * <code>optional int32 roomType = 2;</code>
       */
      public Builder setRoomType(int value) {
        bitField0_ |= 0x00000002;
        roomType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomType = 2;</code>
       */
      public Builder clearRoomType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roomType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeRoomListResponse)
    }

    static {
      defaultInstance = new FishingChallengeRoomListResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeRoomListResponse)
  }

  public interface FishingChallengeCreateRoomRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeCreateRoomRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string roomPassword = 1;</code>
     *
     * <pre>
     * 房间密码，可为空
     * </pre>
     */
    boolean hasRoomPassword();
    /**
     * <code>optional string roomPassword = 1;</code>
     *
     * <pre>
     * 房间密码，可为空
     * </pre>
     */
    java.lang.String getRoomPassword();
    /**
     * <code>optional string roomPassword = 1;</code>
     *
     * <pre>
     * 房间密码，可为空
     * </pre>
     */
    com.google.protobuf.ByteString
        getRoomPasswordBytes();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeCreateRoomRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_CREATE_ROOM_REQUEST = 0x10021023; // 创建捕鱼挑战赛房间请求
   * </pre>
   */
  public static final class FishingChallengeCreateRoomRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeCreateRoomRequest)
      FishingChallengeCreateRoomRequestOrBuilder {
    // Use FishingChallengeCreateRoomRequest.newBuilder() to construct.
    private FishingChallengeCreateRoomRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeCreateRoomRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeCreateRoomRequest defaultInstance;
    public static FishingChallengeCreateRoomRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeCreateRoomRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeCreateRoomRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              roomPassword_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCreateRoomRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCreateRoomRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeCreateRoomRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeCreateRoomRequest>() {
      public FishingChallengeCreateRoomRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeCreateRoomRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeCreateRoomRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ROOMPASSWORD_FIELD_NUMBER = 1;
    private java.lang.Object roomPassword_;
    /**
     * <code>optional string roomPassword = 1;</code>
     *
     * <pre>
     * 房间密码，可为空
     * </pre>
     */
    public boolean hasRoomPassword() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string roomPassword = 1;</code>
     *
     * <pre>
     * 房间密码，可为空
     * </pre>
     */
    public java.lang.String getRoomPassword() {
      java.lang.Object ref = roomPassword_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roomPassword_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string roomPassword = 1;</code>
     *
     * <pre>
     * 房间密码，可为空
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRoomPasswordBytes() {
      java.lang.Object ref = roomPassword_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      roomPassword_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getRoomPasswordBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getRoomPasswordBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeCreateRoomRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_CREATE_ROOM_REQUEST = 0x10021023; // 创建捕鱼挑战赛房间请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeCreateRoomRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCreateRoomRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCreateRoomRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomPassword_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCreateRoomRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomPassword_ = roomPassword_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest.getDefaultInstance()) return this;
        if (other.hasRoomPassword()) {
          bitField0_ |= 0x00000001;
          roomPassword_ = other.roomPassword_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCreateRoomRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object roomPassword_ = "";
      /**
       * <code>optional string roomPassword = 1;</code>
       *
       * <pre>
       * 房间密码，可为空
       * </pre>
       */
      public boolean hasRoomPassword() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string roomPassword = 1;</code>
       *
       * <pre>
       * 房间密码，可为空
       * </pre>
       */
      public java.lang.String getRoomPassword() {
        java.lang.Object ref = roomPassword_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            roomPassword_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string roomPassword = 1;</code>
       *
       * <pre>
       * 房间密码，可为空
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRoomPasswordBytes() {
        java.lang.Object ref = roomPassword_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomPassword_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string roomPassword = 1;</code>
       *
       * <pre>
       * 房间密码，可为空
       * </pre>
       */
      public Builder setRoomPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomPassword_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string roomPassword = 1;</code>
       *
       * <pre>
       * 房间密码，可为空
       * </pre>
       */
      public Builder clearRoomPassword() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomPassword_ = getDefaultInstance().getRoomPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string roomPassword = 1;</code>
       *
       * <pre>
       * 房间密码，可为空
       * </pre>
       */
      public Builder setRoomPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        roomPassword_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeCreateRoomRequest)
    }

    static {
      defaultInstance = new FishingChallengeCreateRoomRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeCreateRoomRequest)
  }

  public interface FishingChallengeJoinRoomRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    boolean hasRoomCode();
    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    int getRoomCode();

    /**
     * <code>optional string roomPassword = 2;</code>
     *
     * <pre>
     * 房间密码，无密码就填入空字符串
     * </pre>
     */
    boolean hasRoomPassword();
    /**
     * <code>optional string roomPassword = 2;</code>
     *
     * <pre>
     * 房间密码，无密码就填入空字符串
     * </pre>
     */
    java.lang.String getRoomPassword();
    /**
     * <code>optional string roomPassword = 2;</code>
     *
     * <pre>
     * 房间密码，无密码就填入空字符串
     * </pre>
     */
    com.google.protobuf.ByteString
        getRoomPasswordBytes();

    /**
     * <code>optional int32 roomType = 3;</code>
     *
     * <pre>
     * 房间类型 1: 1号房 2： 2号房 3：Vip房
     * </pre>
     */
    boolean hasRoomType();
    /**
     * <code>optional int32 roomType = 3;</code>
     *
     * <pre>
     * 房间类型 1: 1号房 2： 2号房 3：Vip房
     * </pre>
     */
    int getRoomType();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_JOIN_ROOM_REQUEST = 0x10021024; // 加入捕鱼挑战赛房间请求
   * </pre>
   */
  public static final class FishingChallengeJoinRoomRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomRequest)
      FishingChallengeJoinRoomRequestOrBuilder {
    // Use FishingChallengeJoinRoomRequest.newBuilder() to construct.
    private FishingChallengeJoinRoomRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeJoinRoomRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeJoinRoomRequest defaultInstance;
    public static FishingChallengeJoinRoomRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeJoinRoomRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeJoinRoomRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomCode_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              roomPassword_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              roomType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeJoinRoomRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeJoinRoomRequest>() {
      public FishingChallengeJoinRoomRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeJoinRoomRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeJoinRoomRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ROOMCODE_FIELD_NUMBER = 1;
    private int roomCode_;
    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    public boolean hasRoomCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    public int getRoomCode() {
      return roomCode_;
    }

    public static final int ROOMPASSWORD_FIELD_NUMBER = 2;
    private java.lang.Object roomPassword_;
    /**
     * <code>optional string roomPassword = 2;</code>
     *
     * <pre>
     * 房间密码，无密码就填入空字符串
     * </pre>
     */
    public boolean hasRoomPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string roomPassword = 2;</code>
     *
     * <pre>
     * 房间密码，无密码就填入空字符串
     * </pre>
     */
    public java.lang.String getRoomPassword() {
      java.lang.Object ref = roomPassword_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roomPassword_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string roomPassword = 2;</code>
     *
     * <pre>
     * 房间密码，无密码就填入空字符串
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRoomPasswordBytes() {
      java.lang.Object ref = roomPassword_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROOMTYPE_FIELD_NUMBER = 3;
    private int roomType_;
    /**
     * <code>optional int32 roomType = 3;</code>
     *
     * <pre>
     * 房间类型 1: 1号房 2： 2号房 3：Vip房
     * </pre>
     */
    public boolean hasRoomType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 roomType = 3;</code>
     *
     * <pre>
     * 房间类型 1: 1号房 2： 2号房 3：Vip房
     * </pre>
     */
    public int getRoomType() {
      return roomType_;
    }

    private void initFields() {
      roomCode_ = 0;
      roomPassword_ = "";
      roomType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getRoomPasswordBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, roomType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getRoomPasswordBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, roomType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_JOIN_ROOM_REQUEST = 0x10021024; // 加入捕鱼挑战赛房间请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        roomPassword_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        roomType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomCode_ = roomCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.roomPassword_ = roomPassword_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roomType_ = roomType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest.getDefaultInstance()) return this;
        if (other.hasRoomCode()) {
          setRoomCode(other.getRoomCode());
        }
        if (other.hasRoomPassword()) {
          bitField0_ |= 0x00000002;
          roomPassword_ = other.roomPassword_;
          onChanged();
        }
        if (other.hasRoomType()) {
          setRoomType(other.getRoomType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int roomCode_ ;
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public boolean hasRoomCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public int getRoomCode() {
        return roomCode_;
      }
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public Builder setRoomCode(int value) {
        bitField0_ |= 0x00000001;
        roomCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public Builder clearRoomCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomCode_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object roomPassword_ = "";
      /**
       * <code>optional string roomPassword = 2;</code>
       *
       * <pre>
       * 房间密码，无密码就填入空字符串
       * </pre>
       */
      public boolean hasRoomPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string roomPassword = 2;</code>
       *
       * <pre>
       * 房间密码，无密码就填入空字符串
       * </pre>
       */
      public java.lang.String getRoomPassword() {
        java.lang.Object ref = roomPassword_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            roomPassword_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string roomPassword = 2;</code>
       *
       * <pre>
       * 房间密码，无密码就填入空字符串
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRoomPasswordBytes() {
        java.lang.Object ref = roomPassword_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomPassword_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string roomPassword = 2;</code>
       *
       * <pre>
       * 房间密码，无密码就填入空字符串
       * </pre>
       */
      public Builder setRoomPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        roomPassword_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string roomPassword = 2;</code>
       *
       * <pre>
       * 房间密码，无密码就填入空字符串
       * </pre>
       */
      public Builder clearRoomPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        roomPassword_ = getDefaultInstance().getRoomPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string roomPassword = 2;</code>
       *
       * <pre>
       * 房间密码，无密码就填入空字符串
       * </pre>
       */
      public Builder setRoomPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        roomPassword_ = value;
        onChanged();
        return this;
      }

      private int roomType_ ;
      /**
       * <code>optional int32 roomType = 3;</code>
       *
       * <pre>
       * 房间类型 1: 1号房 2： 2号房 3：Vip房
       * </pre>
       */
      public boolean hasRoomType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 roomType = 3;</code>
       *
       * <pre>
       * 房间类型 1: 1号房 2： 2号房 3：Vip房
       * </pre>
       */
      public int getRoomType() {
        return roomType_;
      }
      /**
       * <code>optional int32 roomType = 3;</code>
       *
       * <pre>
       * 房间类型 1: 1号房 2： 2号房 3：Vip房
       * </pre>
       */
      public Builder setRoomType(int value) {
        bitField0_ |= 0x00000004;
        roomType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomType = 3;</code>
       *
       * <pre>
       * 房间类型 1: 1号房 2： 2号房 3：Vip房
       * </pre>
       */
      public Builder clearRoomType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roomType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomRequest)
    }

    static {
      defaultInstance = new FishingChallengeJoinRoomRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomRequest)
  }

  public interface FishingChallengeJoinRoomResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    boolean hasRoomCode();
    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    int getRoomCode();

    /**
     * <code>optional bool vip = 2;</code>
     *
     * <pre>
     * 是否是VIP房间
     * </pre>
     */
    boolean hasVip();
    /**
     * <code>optional bool vip = 2;</code>
     *
     * <pre>
     * 是否是VIP房间
     * </pre>
     */
    boolean getVip();

    /**
     * <code>optional int32 roomType = 3;</code>
     *
     * <pre>
     * 房间类型 1: 1号房 2： 2号房 3：Vip房
     * </pre>
     */
    boolean hasRoomType();
    /**
     * <code>optional int32 roomType = 3;</code>
     *
     * <pre>
     * 房间类型 1: 1号房 2： 2号房 3：Vip房
     * </pre>
     */
    int getRoomType();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_JOIN_ROOM_RESPONSE = 0x20021024; // 加入捕鱼挑战赛房间响应
   * </pre>
   */
  public static final class FishingChallengeJoinRoomResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomResponse)
      FishingChallengeJoinRoomResponseOrBuilder {
    // Use FishingChallengeJoinRoomResponse.newBuilder() to construct.
    private FishingChallengeJoinRoomResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeJoinRoomResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeJoinRoomResponse defaultInstance;
    public static FishingChallengeJoinRoomResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeJoinRoomResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeJoinRoomResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              roomCode_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              vip_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              roomType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeJoinRoomResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeJoinRoomResponse>() {
      public FishingChallengeJoinRoomResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeJoinRoomResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeJoinRoomResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ROOMCODE_FIELD_NUMBER = 1;
    private int roomCode_;
    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    public boolean hasRoomCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 roomCode = 1;</code>
     *
     * <pre>
     * 房间号
     * </pre>
     */
    public int getRoomCode() {
      return roomCode_;
    }

    public static final int VIP_FIELD_NUMBER = 2;
    private boolean vip_;
    /**
     * <code>optional bool vip = 2;</code>
     *
     * <pre>
     * 是否是VIP房间
     * </pre>
     */
    public boolean hasVip() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool vip = 2;</code>
     *
     * <pre>
     * 是否是VIP房间
     * </pre>
     */
    public boolean getVip() {
      return vip_;
    }

    public static final int ROOMTYPE_FIELD_NUMBER = 3;
    private int roomType_;
    /**
     * <code>optional int32 roomType = 3;</code>
     *
     * <pre>
     * 房间类型 1: 1号房 2： 2号房 3：Vip房
     * </pre>
     */
    public boolean hasRoomType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 roomType = 3;</code>
     *
     * <pre>
     * 房间类型 1: 1号房 2： 2号房 3：Vip房
     * </pre>
     */
    public int getRoomType() {
      return roomType_;
    }

    private void initFields() {
      roomCode_ = 0;
      vip_ = false;
      roomType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, roomCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, vip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, roomType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, roomCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, vip_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, roomType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_JOIN_ROOM_RESPONSE = 0x20021024; // 加入捕鱼挑战赛房间响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        roomCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        vip_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        roomType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.roomCode_ = roomCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.vip_ = vip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.roomType_ = roomType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse.getDefaultInstance()) return this;
        if (other.hasRoomCode()) {
          setRoomCode(other.getRoomCode());
        }
        if (other.hasVip()) {
          setVip(other.getVip());
        }
        if (other.hasRoomType()) {
          setRoomType(other.getRoomType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeJoinRoomResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int roomCode_ ;
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public boolean hasRoomCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public int getRoomCode() {
        return roomCode_;
      }
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public Builder setRoomCode(int value) {
        bitField0_ |= 0x00000001;
        roomCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomCode = 1;</code>
       *
       * <pre>
       * 房间号
       * </pre>
       */
      public Builder clearRoomCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        roomCode_ = 0;
        onChanged();
        return this;
      }

      private boolean vip_ ;
      /**
       * <code>optional bool vip = 2;</code>
       *
       * <pre>
       * 是否是VIP房间
       * </pre>
       */
      public boolean hasVip() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool vip = 2;</code>
       *
       * <pre>
       * 是否是VIP房间
       * </pre>
       */
      public boolean getVip() {
        return vip_;
      }
      /**
       * <code>optional bool vip = 2;</code>
       *
       * <pre>
       * 是否是VIP房间
       * </pre>
       */
      public Builder setVip(boolean value) {
        bitField0_ |= 0x00000002;
        vip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool vip = 2;</code>
       *
       * <pre>
       * 是否是VIP房间
       * </pre>
       */
      public Builder clearVip() {
        bitField0_ = (bitField0_ & ~0x00000002);
        vip_ = false;
        onChanged();
        return this;
      }

      private int roomType_ ;
      /**
       * <code>optional int32 roomType = 3;</code>
       *
       * <pre>
       * 房间类型 1: 1号房 2： 2号房 3：Vip房
       * </pre>
       */
      public boolean hasRoomType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 roomType = 3;</code>
       *
       * <pre>
       * 房间类型 1: 1号房 2： 2号房 3：Vip房
       * </pre>
       */
      public int getRoomType() {
        return roomType_;
      }
      /**
       * <code>optional int32 roomType = 3;</code>
       *
       * <pre>
       * 房间类型 1: 1号房 2： 2号房 3：Vip房
       * </pre>
       */
      public Builder setRoomType(int value) {
        bitField0_ |= 0x00000004;
        roomType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roomType = 3;</code>
       *
       * <pre>
       * 房间类型 1: 1号房 2： 2号房 3：Vip房
       * </pre>
       */
      public Builder clearRoomType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        roomType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomResponse)
    }

    static {
      defaultInstance = new FishingChallengeJoinRoomResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeJoinRoomResponse)
  }

  public interface FishingChallengeExitRoomRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeExitRoomRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeExitRoomRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_EXIT_ROOM_REQUEST = 0x10021025; // 退出捕鱼挑战赛房间请求
   * </pre>
   */
  public static final class FishingChallengeExitRoomRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeExitRoomRequest)
      FishingChallengeExitRoomRequestOrBuilder {
    // Use FishingChallengeExitRoomRequest.newBuilder() to construct.
    private FishingChallengeExitRoomRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeExitRoomRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeExitRoomRequest defaultInstance;
    public static FishingChallengeExitRoomRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeExitRoomRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeExitRoomRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeExitRoomRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeExitRoomRequest>() {
      public FishingChallengeExitRoomRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeExitRoomRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeExitRoomRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeExitRoomRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_EXIT_ROOM_REQUEST = 0x10021025; // 退出捕鱼挑战赛房间请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeExitRoomRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeExitRoomRequest)
    }

    static {
      defaultInstance = new FishingChallengeExitRoomRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeExitRoomRequest)
  }

  public interface FishingChallengeExitRoomResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeExitRoomResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 退出房间的玩家ID
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 退出房间的玩家ID
     * </pre>
     */
    long getPlayerId();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeExitRoomResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_EXIT_ROOM_RESPONSE = 0x20021025; // 退出捕鱼挑战赛房间响应
   * </pre>
   */
  public static final class FishingChallengeExitRoomResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeExitRoomResponse)
      FishingChallengeExitRoomResponseOrBuilder {
    // Use FishingChallengeExitRoomResponse.newBuilder() to construct.
    private FishingChallengeExitRoomResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeExitRoomResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeExitRoomResponse defaultInstance;
    public static FishingChallengeExitRoomResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeExitRoomResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeExitRoomResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeExitRoomResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeExitRoomResponse>() {
      public FishingChallengeExitRoomResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeExitRoomResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeExitRoomResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 退出房间的玩家ID
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 退出房间的玩家ID
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    private void initFields() {
      playerId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, playerId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, playerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeExitRoomResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_EXIT_ROOM_RESPONSE = 0x20021025; // 退出捕鱼挑战赛房间响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeExitRoomResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeExitRoomResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 退出房间的玩家ID
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 退出房间的玩家ID
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 退出房间的玩家ID
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 退出房间的玩家ID
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeExitRoomResponse)
    }

    static {
      defaultInstance = new FishingChallengeExitRoomResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeExitRoomResponse)
  }

  public interface FishingChallengeQuickJoinRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeQuickJoinRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeQuickJoinRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_QUICK_JOIN_REQUEST = 0x10021026; // 快速加入房间请求
   * </pre>
   */
  public static final class FishingChallengeQuickJoinRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeQuickJoinRequest)
      FishingChallengeQuickJoinRequestOrBuilder {
    // Use FishingChallengeQuickJoinRequest.newBuilder() to construct.
    private FishingChallengeQuickJoinRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeQuickJoinRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeQuickJoinRequest defaultInstance;
    public static FishingChallengeQuickJoinRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeQuickJoinRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeQuickJoinRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeQuickJoinRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeQuickJoinRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeQuickJoinRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeQuickJoinRequest>() {
      public FishingChallengeQuickJoinRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeQuickJoinRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeQuickJoinRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeQuickJoinRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_QUICK_JOIN_REQUEST = 0x10021026; // 快速加入房间请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeQuickJoinRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeQuickJoinRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeQuickJoinRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeQuickJoinRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeQuickJoinRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeQuickJoinRequest)
    }

    static {
      defaultInstance = new FishingChallengeQuickJoinRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeQuickJoinRequest)
  }

  public interface FishingChallengeRoomPlayerInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
     *
     * <pre>
     * 玩家信息
     * </pre>
     */
    boolean hasPlayerInfo();
    /**
     * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
     *
     * <pre>
     * 玩家信息
     * </pre>
     */
    com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto getPlayerInfo();
    /**
     * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
     *
     * <pre>
     * 玩家信息
     * </pre>
     */
    com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder getPlayerInfoOrBuilder();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_ROOM_PLAYER_INFO_RESPONSE = 0x20021027; // 发送房间内玩家信息给房间内所有玩家
   * </pre>
   */
  public static final class FishingChallengeRoomPlayerInfoResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoResponse)
      FishingChallengeRoomPlayerInfoResponseOrBuilder {
    // Use FishingChallengeRoomPlayerInfoResponse.newBuilder() to construct.
    private FishingChallengeRoomPlayerInfoResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeRoomPlayerInfoResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeRoomPlayerInfoResponse defaultInstance;
    public static FishingChallengeRoomPlayerInfoResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeRoomPlayerInfoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeRoomPlayerInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerInfo_.toBuilder();
              }
              playerInfo_ = input.readMessage(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerInfo_);
                playerInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeRoomPlayerInfoResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeRoomPlayerInfoResponse>() {
      public FishingChallengeRoomPlayerInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeRoomPlayerInfoResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeRoomPlayerInfoResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYERINFO_FIELD_NUMBER = 1;
    private com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto playerInfo_;
    /**
     * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
     *
     * <pre>
     * 玩家信息
     * </pre>
     */
    public boolean hasPlayerInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
     *
     * <pre>
     * 玩家信息
     * </pre>
     */
    public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto getPlayerInfo() {
      return playerInfo_;
    }
    /**
     * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
     *
     * <pre>
     * 玩家信息
     * </pre>
     */
    public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder getPlayerInfoOrBuilder() {
      return playerInfo_;
    }

    private void initFields() {
      playerInfo_ = com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, playerInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_ROOM_PLAYER_INFO_RESPONSE = 0x20021027; // 发送房间内玩家信息给房间内所有玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerInfoBuilder_ == null) {
          playerInfo_ = com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.getDefaultInstance();
        } else {
          playerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerInfoBuilder_ == null) {
          result.playerInfo_ = playerInfo_;
        } else {
          result.playerInfo_ = playerInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse.getDefaultInstance()) return this;
        if (other.hasPlayerInfo()) {
          mergePlayerInfo(other.getPlayerInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto playerInfo_ = com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder> playerInfoBuilder_;
      /**
       * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
       *
       * <pre>
       * 玩家信息
       * </pre>
       */
      public boolean hasPlayerInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
       *
       * <pre>
       * 玩家信息
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto getPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          return playerInfo_;
        } else {
          return playerInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
       *
       * <pre>
       * 玩家信息
       * </pre>
       */
      public Builder setPlayerInfo(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerInfo_ = value;
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
       *
       * <pre>
       * 玩家信息
       * </pre>
       */
      public Builder setPlayerInfo(
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = builderForValue.build();
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
       *
       * <pre>
       * 玩家信息
       * </pre>
       */
      public Builder mergePlayerInfo(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto value) {
        if (playerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              playerInfo_ != com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.getDefaultInstance()) {
            playerInfo_ =
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.newBuilder(playerInfo_).mergeFrom(value).buildPartial();
          } else {
            playerInfo_ = value;
          }
          onChanged();
        } else {
          playerInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
       *
       * <pre>
       * 玩家信息
       * </pre>
       */
      public Builder clearPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.getDefaultInstance();
          onChanged();
        } else {
          playerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
       *
       * <pre>
       * 玩家信息
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder getPlayerInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
       *
       * <pre>
       * 玩家信息
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder getPlayerInfoOrBuilder() {
        if (playerInfoBuilder_ != null) {
          return playerInfoBuilder_.getMessageOrBuilder();
        } else {
          return playerInfo_;
        }
      }
      /**
       * <code>optional .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfo = 1;</code>
       *
       * <pre>
       * 玩家信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder> 
          getPlayerInfoFieldBuilder() {
        if (playerInfoBuilder_ == null) {
          playerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder>(
                  getPlayerInfo(),
                  getParentForChildren(),
                  isClean());
          playerInfo_ = null;
        }
        return playerInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoResponse)
    }

    static {
      defaultInstance = new FishingChallengeRoomPlayerInfoResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoResponse)
  }

  public interface FishingChallengeRoomPlayerInfoListResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoListResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
     *
     * <pre>
     * 所有玩家信息
     * </pre>
     */
    java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto> 
        getPlayerInfosList();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
     *
     * <pre>
     * 所有玩家信息
     * </pre>
     */
    com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto getPlayerInfos(int index);
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
     *
     * <pre>
     * 所有玩家信息
     * </pre>
     */
    int getPlayerInfosCount();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
     *
     * <pre>
     * 所有玩家信息
     * </pre>
     */
    java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder> 
        getPlayerInfosOrBuilderList();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
     *
     * <pre>
     * 所有玩家信息
     * </pre>
     */
    com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder getPlayerInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoListResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_ROOM_PLAYER_INFO_LIST_RESPONSE = 0x20021028; // 发送房间内所有玩家信息给某个玩家
   * </pre>
   */
  public static final class FishingChallengeRoomPlayerInfoListResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoListResponse)
      FishingChallengeRoomPlayerInfoListResponseOrBuilder {
    // Use FishingChallengeRoomPlayerInfoListResponse.newBuilder() to construct.
    private FishingChallengeRoomPlayerInfoListResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeRoomPlayerInfoListResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeRoomPlayerInfoListResponse defaultInstance;
    public static FishingChallengeRoomPlayerInfoListResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeRoomPlayerInfoListResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeRoomPlayerInfoListResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                playerInfos_ = new java.util.ArrayList<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              playerInfos_.add(input.readMessage(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          playerInfos_ = java.util.Collections.unmodifiableList(playerInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoListResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoListResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeRoomPlayerInfoListResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeRoomPlayerInfoListResponse>() {
      public FishingChallengeRoomPlayerInfoListResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeRoomPlayerInfoListResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeRoomPlayerInfoListResponse> getParserForType() {
      return PARSER;
    }

    public static final int PLAYERINFOS_FIELD_NUMBER = 1;
    private java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto> playerInfos_;
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
     *
     * <pre>
     * 所有玩家信息
     * </pre>
     */
    public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto> getPlayerInfosList() {
      return playerInfos_;
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
     *
     * <pre>
     * 所有玩家信息
     * </pre>
     */
    public java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder> 
        getPlayerInfosOrBuilderList() {
      return playerInfos_;
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
     *
     * <pre>
     * 所有玩家信息
     * </pre>
     */
    public int getPlayerInfosCount() {
      return playerInfos_.size();
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
     *
     * <pre>
     * 所有玩家信息
     * </pre>
     */
    public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto getPlayerInfos(int index) {
      return playerInfos_.get(index);
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
     *
     * <pre>
     * 所有玩家信息
     * </pre>
     */
    public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder getPlayerInfosOrBuilder(
        int index) {
      return playerInfos_.get(index);
    }

    private void initFields() {
      playerInfos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < playerInfos_.size(); i++) {
        output.writeMessage(1, playerInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < playerInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoListResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_ROOM_PLAYER_INFO_LIST_RESPONSE = 0x20021028; // 发送房间内所有玩家信息给某个玩家
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoListResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoListResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoListResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerInfosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerInfosBuilder_ == null) {
          playerInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          playerInfosBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoListResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse(this);
        int from_bitField0_ = bitField0_;
        if (playerInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            playerInfos_ = java.util.Collections.unmodifiableList(playerInfos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.playerInfos_ = playerInfos_;
        } else {
          result.playerInfos_ = playerInfosBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse.getDefaultInstance()) return this;
        if (playerInfosBuilder_ == null) {
          if (!other.playerInfos_.isEmpty()) {
            if (playerInfos_.isEmpty()) {
              playerInfos_ = other.playerInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePlayerInfosIsMutable();
              playerInfos_.addAll(other.playerInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.playerInfos_.isEmpty()) {
            if (playerInfosBuilder_.isEmpty()) {
              playerInfosBuilder_.dispose();
              playerInfosBuilder_ = null;
              playerInfos_ = other.playerInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              playerInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayerInfosFieldBuilder() : null;
            } else {
              playerInfosBuilder_.addAllMessages(other.playerInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRoomPlayerInfoListResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto> playerInfos_ =
        java.util.Collections.emptyList();
      private void ensurePlayerInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          playerInfos_ = new java.util.ArrayList<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto>(playerInfos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder> playerInfosBuilder_;

      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto> getPlayerInfosList() {
        if (playerInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(playerInfos_);
        } else {
          return playerInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public int getPlayerInfosCount() {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.size();
        } else {
          return playerInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto getPlayerInfos(int index) {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.get(index);
        } else {
          return playerInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public Builder setPlayerInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.set(index, value);
          onChanged();
        } else {
          playerInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public Builder setPlayerInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public Builder addPlayerInfos(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.add(value);
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public Builder addPlayerInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto value) {
        if (playerInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayerInfosIsMutable();
          playerInfos_.add(index, value);
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public Builder addPlayerInfos(
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.add(builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public Builder addPlayerInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder builderForValue) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          playerInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public Builder addAllPlayerInfos(
          java.lang.Iterable<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto> values) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, playerInfos_);
          onChanged();
        } else {
          playerInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public Builder clearPlayerInfos() {
        if (playerInfosBuilder_ == null) {
          playerInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          playerInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public Builder removePlayerInfos(int index) {
        if (playerInfosBuilder_ == null) {
          ensurePlayerInfosIsMutable();
          playerInfos_.remove(index);
          onChanged();
        } else {
          playerInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder getPlayerInfosBuilder(
          int index) {
        return getPlayerInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder getPlayerInfosOrBuilder(
          int index) {
        if (playerInfosBuilder_ == null) {
          return playerInfos_.get(index);  } else {
          return playerInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder> 
           getPlayerInfosOrBuilderList() {
        if (playerInfosBuilder_ != null) {
          return playerInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(playerInfos_);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder addPlayerInfosBuilder() {
        return getPlayerInfosFieldBuilder().addBuilder(
            com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder addPlayerInfosBuilder(
          int index) {
        return getPlayerInfosFieldBuilder().addBuilder(
            index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengePlayerInfoProto playerInfos = 1;</code>
       *
       * <pre>
       * 所有玩家信息
       * </pre>
       */
      public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder> 
           getPlayerInfosBuilderList() {
        return getPlayerInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder> 
          getPlayerInfosFieldBuilder() {
        if (playerInfosBuilder_ == null) {
          playerInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengePlayerInfoProtoOrBuilder>(
                  playerInfos_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          playerInfos_ = null;
        }
        return playerInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoListResponse)
    }

    static {
      defaultInstance = new FishingChallengeRoomPlayerInfoListResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeRoomPlayerInfoListResponse)
  }

  public interface FishingChallengeChangeBatteryViewRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 targetViewIndex = 1;</code>
     *
     * <pre>
     * 目标外观序号
     * </pre>
     */
    boolean hasTargetViewIndex();
    /**
     * <code>optional int32 targetViewIndex = 1;</code>
     *
     * <pre>
     * 目标外观序号
     * </pre>
     */
    int getTargetViewIndex();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_CHANGE_BATTERY_VIEW_REQUEST = 0x10021029; // 捕鱼改变炮台外观请求
   * </pre>
   */
  public static final class FishingChallengeChangeBatteryViewRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewRequest)
      FishingChallengeChangeBatteryViewRequestOrBuilder {
    // Use FishingChallengeChangeBatteryViewRequest.newBuilder() to construct.
    private FishingChallengeChangeBatteryViewRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeChangeBatteryViewRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeChangeBatteryViewRequest defaultInstance;
    public static FishingChallengeChangeBatteryViewRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeChangeBatteryViewRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeChangeBatteryViewRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              targetViewIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeChangeBatteryViewRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeChangeBatteryViewRequest>() {
      public FishingChallengeChangeBatteryViewRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeChangeBatteryViewRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeChangeBatteryViewRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TARGETVIEWINDEX_FIELD_NUMBER = 1;
    private int targetViewIndex_;
    /**
     * <code>optional int32 targetViewIndex = 1;</code>
     *
     * <pre>
     * 目标外观序号
     * </pre>
     */
    public boolean hasTargetViewIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 targetViewIndex = 1;</code>
     *
     * <pre>
     * 目标外观序号
     * </pre>
     */
    public int getTargetViewIndex() {
      return targetViewIndex_;
    }

    private void initFields() {
      targetViewIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, targetViewIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, targetViewIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_CHANGE_BATTERY_VIEW_REQUEST = 0x10021029; // 捕鱼改变炮台外观请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        targetViewIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.targetViewIndex_ = targetViewIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest.getDefaultInstance()) return this;
        if (other.hasTargetViewIndex()) {
          setTargetViewIndex(other.getTargetViewIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int targetViewIndex_ ;
      /**
       * <code>optional int32 targetViewIndex = 1;</code>
       *
       * <pre>
       * 目标外观序号
       * </pre>
       */
      public boolean hasTargetViewIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 targetViewIndex = 1;</code>
       *
       * <pre>
       * 目标外观序号
       * </pre>
       */
      public int getTargetViewIndex() {
        return targetViewIndex_;
      }
      /**
       * <code>optional int32 targetViewIndex = 1;</code>
       *
       * <pre>
       * 目标外观序号
       * </pre>
       */
      public Builder setTargetViewIndex(int value) {
        bitField0_ |= 0x00000001;
        targetViewIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 targetViewIndex = 1;</code>
       *
       * <pre>
       * 目标外观序号
       * </pre>
       */
      public Builder clearTargetViewIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        targetViewIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewRequest)
    }

    static {
      defaultInstance = new FishingChallengeChangeBatteryViewRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewRequest)
  }

  public interface FishingChallengeChangeBatteryViewResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    long getPlayerId();

    /**
     * <code>optional int32 viewIndex = 2;</code>
     *
     * <pre>
     * 外观序号
     * </pre>
     */
    boolean hasViewIndex();
    /**
     * <code>optional int32 viewIndex = 2;</code>
     *
     * <pre>
     * 外观序号
     * </pre>
     */
    int getViewIndex();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_CHANGE_BATTERY_VIEW_RESPONSE = 0x20021029; // 捕鱼改变炮台外观返回
   * </pre>
   */
  public static final class FishingChallengeChangeBatteryViewResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewResponse)
      FishingChallengeChangeBatteryViewResponseOrBuilder {
    // Use FishingChallengeChangeBatteryViewResponse.newBuilder() to construct.
    private FishingChallengeChangeBatteryViewResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeChangeBatteryViewResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeChangeBatteryViewResponse defaultInstance;
    public static FishingChallengeChangeBatteryViewResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeChangeBatteryViewResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeChangeBatteryViewResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              viewIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeChangeBatteryViewResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeChangeBatteryViewResponse>() {
      public FishingChallengeChangeBatteryViewResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeChangeBatteryViewResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeChangeBatteryViewResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    public static final int VIEWINDEX_FIELD_NUMBER = 2;
    private int viewIndex_;
    /**
     * <code>optional int32 viewIndex = 2;</code>
     *
     * <pre>
     * 外观序号
     * </pre>
     */
    public boolean hasViewIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 viewIndex = 2;</code>
     *
     * <pre>
     * 外观序号
     * </pre>
     */
    public int getViewIndex() {
      return viewIndex_;
    }

    private void initFields() {
      playerId_ = 0L;
      viewIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, viewIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, viewIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_CHANGE_BATTERY_VIEW_RESPONSE = 0x20021029; // 捕鱼改变炮台外观返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        viewIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.viewIndex_ = viewIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasViewIndex()) {
          setViewIndex(other.getViewIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryViewResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      private int viewIndex_ ;
      /**
       * <code>optional int32 viewIndex = 2;</code>
       *
       * <pre>
       * 外观序号
       * </pre>
       */
      public boolean hasViewIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 viewIndex = 2;</code>
       *
       * <pre>
       * 外观序号
       * </pre>
       */
      public int getViewIndex() {
        return viewIndex_;
      }
      /**
       * <code>optional int32 viewIndex = 2;</code>
       *
       * <pre>
       * 外观序号
       * </pre>
       */
      public Builder setViewIndex(int value) {
        bitField0_ |= 0x00000002;
        viewIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 viewIndex = 2;</code>
       *
       * <pre>
       * 外观序号
       * </pre>
       */
      public Builder clearViewIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        viewIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewResponse)
    }

    static {
      defaultInstance = new FishingChallengeChangeBatteryViewResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryViewResponse)
  }

  public interface FishingChallengeChangeBatteryLevelRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 targetLevel = 1;</code>
     *
     * <pre>
     * 目标等级
     * </pre>
     */
    boolean hasTargetLevel();
    /**
     * <code>optional int32 targetLevel = 1;</code>
     *
     * <pre>
     * 目标等级
     * </pre>
     */
    int getTargetLevel();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_CHANGE_BATTERY_LEVEL_REQUEST = 0x10021030; // 捕鱼改变炮台等级请求
   * </pre>
   */
  public static final class FishingChallengeChangeBatteryLevelRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelRequest)
      FishingChallengeChangeBatteryLevelRequestOrBuilder {
    // Use FishingChallengeChangeBatteryLevelRequest.newBuilder() to construct.
    private FishingChallengeChangeBatteryLevelRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeChangeBatteryLevelRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeChangeBatteryLevelRequest defaultInstance;
    public static FishingChallengeChangeBatteryLevelRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeChangeBatteryLevelRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeChangeBatteryLevelRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              targetLevel_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeChangeBatteryLevelRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeChangeBatteryLevelRequest>() {
      public FishingChallengeChangeBatteryLevelRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeChangeBatteryLevelRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeChangeBatteryLevelRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TARGETLEVEL_FIELD_NUMBER = 1;
    private int targetLevel_;
    /**
     * <code>optional int32 targetLevel = 1;</code>
     *
     * <pre>
     * 目标等级
     * </pre>
     */
    public boolean hasTargetLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 targetLevel = 1;</code>
     *
     * <pre>
     * 目标等级
     * </pre>
     */
    public int getTargetLevel() {
      return targetLevel_;
    }

    private void initFields() {
      targetLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, targetLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, targetLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_CHANGE_BATTERY_LEVEL_REQUEST = 0x10021030; // 捕鱼改变炮台等级请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        targetLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.targetLevel_ = targetLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest.getDefaultInstance()) return this;
        if (other.hasTargetLevel()) {
          setTargetLevel(other.getTargetLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int targetLevel_ ;
      /**
       * <code>optional int32 targetLevel = 1;</code>
       *
       * <pre>
       * 目标等级
       * </pre>
       */
      public boolean hasTargetLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 targetLevel = 1;</code>
       *
       * <pre>
       * 目标等级
       * </pre>
       */
      public int getTargetLevel() {
        return targetLevel_;
      }
      /**
       * <code>optional int32 targetLevel = 1;</code>
       *
       * <pre>
       * 目标等级
       * </pre>
       */
      public Builder setTargetLevel(int value) {
        bitField0_ |= 0x00000001;
        targetLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 targetLevel = 1;</code>
       *
       * <pre>
       * 目标等级
       * </pre>
       */
      public Builder clearTargetLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        targetLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelRequest)
    }

    static {
      defaultInstance = new FishingChallengeChangeBatteryLevelRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelRequest)
  }

  public interface FishingChallengeChangeBatteryLevelResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    long getPlayerId();

    /**
     * <code>optional int32 level = 2;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    boolean hasLevel();
    /**
     * <code>optional int32 level = 2;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    int getLevel();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_CHANGE_BATTERY_LEVEL_RESPONSE = 0x20021030; // 捕鱼改变炮台等级返回
   * </pre>
   */
  public static final class FishingChallengeChangeBatteryLevelResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelResponse)
      FishingChallengeChangeBatteryLevelResponseOrBuilder {
    // Use FishingChallengeChangeBatteryLevelResponse.newBuilder() to construct.
    private FishingChallengeChangeBatteryLevelResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeChangeBatteryLevelResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeChangeBatteryLevelResponse defaultInstance;
    public static FishingChallengeChangeBatteryLevelResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeChangeBatteryLevelResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeChangeBatteryLevelResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              level_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeChangeBatteryLevelResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeChangeBatteryLevelResponse>() {
      public FishingChallengeChangeBatteryLevelResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeChangeBatteryLevelResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeChangeBatteryLevelResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    /**
     * <code>optional int32 level = 2;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 level = 2;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    public int getLevel() {
      return level_;
    }

    private void initFields() {
      playerId_ = 0L;
      level_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, level_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, playerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, level_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_CHANGE_BATTERY_LEVEL_RESPONSE = 0x20021030; // 捕鱼改变炮台等级返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        level_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.level_ = level_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeBatteryLevelResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>optional int32 level = 2;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 level = 2;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>optional int32 level = 2;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public Builder setLevel(int value) {
        bitField0_ |= 0x00000002;
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 level = 2;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelResponse)
    }

    static {
      defaultInstance = new FishingChallengeChangeBatteryLevelResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeChangeBatteryLevelResponse)
  }

  public interface FishingChallengeFireRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeFireRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    boolean hasFireId();
    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    long getFireId();

    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    boolean hasFishId();
    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    long getFishId();

    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 子弹角度
     * </pre>
     */
    boolean hasAngle();
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 子弹角度
     * </pre>
     */
    float getAngle();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFireRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_FIRE_REQUEST = 0x10021031; // 捕鱼发射子弹请求
   * </pre>
   */
  public static final class FishingChallengeFireRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeFireRequest)
      FishingChallengeFireRequestOrBuilder {
    // Use FishingChallengeFireRequest.newBuilder() to construct.
    private FishingChallengeFireRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeFireRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeFireRequest defaultInstance;
    public static FishingChallengeFireRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeFireRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeFireRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fireId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fishId_ = input.readInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              angle_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeFireRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeFireRequest>() {
      public FishingChallengeFireRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeFireRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeFireRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FIREID_FIELD_NUMBER = 1;
    private long fireId_;
    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    public boolean hasFireId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    public long getFireId() {
      return fireId_;
    }

    public static final int FISHID_FIELD_NUMBER = 2;
    private long fishId_;
    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    public boolean hasFishId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    public long getFishId() {
      return fishId_;
    }

    public static final int ANGLE_FIELD_NUMBER = 3;
    private float angle_;
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 子弹角度
     * </pre>
     */
    public boolean hasAngle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 子弹角度
     * </pre>
     */
    public float getAngle() {
      return angle_;
    }

    private void initFields() {
      fireId_ = 0L;
      fishId_ = 0L;
      angle_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, fireId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, fishId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, angle_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, fireId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, fishId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, angle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFireRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_FIRE_REQUEST = 0x10021031; // 捕鱼发射子弹请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeFireRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fireId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        fishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fireId_ = fireId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fishId_ = fishId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.angle_ = angle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest.getDefaultInstance()) return this;
        if (other.hasFireId()) {
          setFireId(other.getFireId());
        }
        if (other.hasFishId()) {
          setFishId(other.getFishId());
        }
        if (other.hasAngle()) {
          setAngle(other.getAngle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long fireId_ ;
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public boolean hasFireId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public long getFireId() {
        return fireId_;
      }
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public Builder setFireId(long value) {
        bitField0_ |= 0x00000001;
        fireId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public Builder clearFireId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fireId_ = 0L;
        onChanged();
        return this;
      }

      private long fishId_ ;
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public boolean hasFishId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public long getFishId() {
        return fishId_;
      }
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public Builder setFishId(long value) {
        bitField0_ |= 0x00000002;
        fishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public Builder clearFishId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fishId_ = 0L;
        onChanged();
        return this;
      }

      private float angle_ ;
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 子弹角度
       * </pre>
       */
      public boolean hasAngle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 子弹角度
       * </pre>
       */
      public float getAngle() {
        return angle_;
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 子弹角度
       * </pre>
       */
      public Builder setAngle(float value) {
        bitField0_ |= 0x00000004;
        angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 子弹角度
       * </pre>
       */
      public Builder clearAngle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        angle_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeFireRequest)
    }

    static {
      defaultInstance = new FishingChallengeFireRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeFireRequest)
  }

  public interface FishingChallengeFireResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeFireResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    boolean hasFireId();
    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    long getFireId();

    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    boolean hasFishId();
    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    long getFishId();

    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 子弹角度
     * </pre>
     */
    boolean hasAngle();
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 子弹角度
     * </pre>
     */
    float getAngle();

    /**
     * <code>optional int64 restMoney = 101;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    boolean hasRestMoney();
    /**
     * <code>optional int64 restMoney = 101;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    long getRestMoney();

    /**
     * <code>optional int64 playerId = 102;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 102;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    long getPlayerId();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFireResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_FIRE_RESPONSE = 0x20021031; // 捕鱼发射子弹返回
   * </pre>
   */
  public static final class FishingChallengeFireResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeFireResponse)
      FishingChallengeFireResponseOrBuilder {
    // Use FishingChallengeFireResponse.newBuilder() to construct.
    private FishingChallengeFireResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeFireResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeFireResponse defaultInstance;
    public static FishingChallengeFireResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeFireResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeFireResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fireId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fishId_ = input.readInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              angle_ = input.readFloat();
              break;
            }
            case 808: {
              bitField0_ |= 0x00000008;
              restMoney_ = input.readInt64();
              break;
            }
            case 816: {
              bitField0_ |= 0x00000010;
              playerId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeFireResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeFireResponse>() {
      public FishingChallengeFireResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeFireResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeFireResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FIREID_FIELD_NUMBER = 1;
    private long fireId_;
    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    public boolean hasFireId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    public long getFireId() {
      return fireId_;
    }

    public static final int FISHID_FIELD_NUMBER = 2;
    private long fishId_;
    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    public boolean hasFishId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    public long getFishId() {
      return fishId_;
    }

    public static final int ANGLE_FIELD_NUMBER = 3;
    private float angle_;
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 子弹角度
     * </pre>
     */
    public boolean hasAngle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 子弹角度
     * </pre>
     */
    public float getAngle() {
      return angle_;
    }

    public static final int RESTMONEY_FIELD_NUMBER = 101;
    private long restMoney_;
    /**
     * <code>optional int64 restMoney = 101;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    public boolean hasRestMoney() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 restMoney = 101;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    public long getRestMoney() {
      return restMoney_;
    }

    public static final int PLAYERID_FIELD_NUMBER = 102;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 102;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 playerId = 102;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    private void initFields() {
      fireId_ = 0L;
      fishId_ = 0L;
      angle_ = 0F;
      restMoney_ = 0L;
      playerId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, fireId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, fishId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, angle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(101, restMoney_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(102, playerId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, fireId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, fishId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, angle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(101, restMoney_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(102, playerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFireResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_FIRE_RESPONSE = 0x20021031; // 捕鱼发射子弹返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeFireResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fireId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        fishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        restMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fireId_ = fireId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fishId_ = fishId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.angle_ = angle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.restMoney_ = restMoney_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.playerId_ = playerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse.getDefaultInstance()) return this;
        if (other.hasFireId()) {
          setFireId(other.getFireId());
        }
        if (other.hasFishId()) {
          setFishId(other.getFishId());
        }
        if (other.hasAngle()) {
          setAngle(other.getAngle());
        }
        if (other.hasRestMoney()) {
          setRestMoney(other.getRestMoney());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFireResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long fireId_ ;
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public boolean hasFireId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public long getFireId() {
        return fireId_;
      }
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public Builder setFireId(long value) {
        bitField0_ |= 0x00000001;
        fireId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public Builder clearFireId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fireId_ = 0L;
        onChanged();
        return this;
      }

      private long fishId_ ;
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public boolean hasFishId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public long getFishId() {
        return fishId_;
      }
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public Builder setFishId(long value) {
        bitField0_ |= 0x00000002;
        fishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public Builder clearFishId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fishId_ = 0L;
        onChanged();
        return this;
      }

      private float angle_ ;
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 子弹角度
       * </pre>
       */
      public boolean hasAngle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 子弹角度
       * </pre>
       */
      public float getAngle() {
        return angle_;
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 子弹角度
       * </pre>
       */
      public Builder setAngle(float value) {
        bitField0_ |= 0x00000004;
        angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 子弹角度
       * </pre>
       */
      public Builder clearAngle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        angle_ = 0F;
        onChanged();
        return this;
      }

      private long restMoney_ ;
      /**
       * <code>optional int64 restMoney = 101;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public boolean hasRestMoney() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 restMoney = 101;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public long getRestMoney() {
        return restMoney_;
      }
      /**
       * <code>optional int64 restMoney = 101;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public Builder setRestMoney(long value) {
        bitField0_ |= 0x00000008;
        restMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 restMoney = 101;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public Builder clearRestMoney() {
        bitField0_ = (bitField0_ & ~0x00000008);
        restMoney_ = 0L;
        onChanged();
        return this;
      }

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 102;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 playerId = 102;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 102;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000010;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 102;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeFireResponse)
    }

    static {
      defaultInstance = new FishingChallengeFireResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeFireResponse)
  }

  public interface FishingChallengeFightFishRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeFightFishRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    boolean hasFireId();
    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    long getFireId();

    /**
     * <code>repeated int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    java.util.List<java.lang.Long> getFishIdList();
    /**
     * <code>repeated int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    int getFishIdCount();
    /**
     * <code>repeated int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    long getFishId(int index);
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFightFishRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_FIGHT_FISH_REQUEST = 0x10021032; // 捕鱼击中鱼类请求
   * </pre>
   */
  public static final class FishingChallengeFightFishRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeFightFishRequest)
      FishingChallengeFightFishRequestOrBuilder {
    // Use FishingChallengeFightFishRequest.newBuilder() to construct.
    private FishingChallengeFightFishRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeFightFishRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeFightFishRequest defaultInstance;
    public static FishingChallengeFightFishRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeFightFishRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeFightFishRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fireId_ = input.readInt64();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                fishId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              fishId_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                fishId_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                fishId_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          fishId_ = java.util.Collections.unmodifiableList(fishId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeFightFishRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeFightFishRequest>() {
      public FishingChallengeFightFishRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeFightFishRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeFightFishRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FIREID_FIELD_NUMBER = 1;
    private long fireId_;
    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    public boolean hasFireId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 fireId = 1;</code>
     *
     * <pre>
     * 子弹id
     * </pre>
     */
    public long getFireId() {
      return fireId_;
    }

    public static final int FISHID_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> fishId_;
    /**
     * <code>repeated int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getFishIdList() {
      return fishId_;
    }
    /**
     * <code>repeated int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    public int getFishIdCount() {
      return fishId_.size();
    }
    /**
     * <code>repeated int64 fishId = 2;</code>
     *
     * <pre>
     * 目标id
     * </pre>
     */
    public long getFishId(int index) {
      return fishId_.get(index);
    }

    private void initFields() {
      fireId_ = 0L;
      fishId_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, fireId_);
      }
      for (int i = 0; i < fishId_.size(); i++) {
        output.writeInt64(2, fishId_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, fireId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fishId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(fishId_.get(i));
        }
        size += dataSize;
        size += 1 * getFishIdList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFightFishRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_FIGHT_FISH_REQUEST = 0x10021032; // 捕鱼击中鱼类请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeFightFishRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fireId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        fishId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fireId_ = fireId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          fishId_ = java.util.Collections.unmodifiableList(fishId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.fishId_ = fishId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest.getDefaultInstance()) return this;
        if (other.hasFireId()) {
          setFireId(other.getFireId());
        }
        if (!other.fishId_.isEmpty()) {
          if (fishId_.isEmpty()) {
            fishId_ = other.fishId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFishIdIsMutable();
            fishId_.addAll(other.fishId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long fireId_ ;
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public boolean hasFireId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public long getFireId() {
        return fireId_;
      }
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public Builder setFireId(long value) {
        bitField0_ |= 0x00000001;
        fireId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fireId = 1;</code>
       *
       * <pre>
       * 子弹id
       * </pre>
       */
      public Builder clearFireId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fireId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> fishId_ = java.util.Collections.emptyList();
      private void ensureFishIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          fishId_ = new java.util.ArrayList<java.lang.Long>(fishId_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFishIdList() {
        return java.util.Collections.unmodifiableList(fishId_);
      }
      /**
       * <code>repeated int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public int getFishIdCount() {
        return fishId_.size();
      }
      /**
       * <code>repeated int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public long getFishId(int index) {
        return fishId_.get(index);
      }
      /**
       * <code>repeated int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public Builder setFishId(
          int index, long value) {
        ensureFishIdIsMutable();
        fishId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public Builder addFishId(long value) {
        ensureFishIdIsMutable();
        fishId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public Builder addAllFishId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFishIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fishId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishId = 2;</code>
       *
       * <pre>
       * 目标id
       * </pre>
       */
      public Builder clearFishId() {
        fishId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeFightFishRequest)
    }

    static {
      defaultInstance = new FishingChallengeFightFishRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeFightFishRequest)
  }

  public interface FishingChallengeFightFishResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeFightFishResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 fishId = 1;</code>
     *
     * <pre>
     * 鱼id
     * </pre>
     */
    boolean hasFishId();
    /**
     * <code>optional int64 fishId = 1;</code>
     *
     * <pre>
     * 鱼id
     * </pre>
     */
    long getFishId();

    /**
     * <code>optional int64 playerId = 2;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 2;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    long getPlayerId();

    /**
     * <code>optional int64 restMoney = 3;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    boolean hasRestMoney();
    /**
     * <code>optional int64 restMoney = 3;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    long getRestMoney();

    /**
     * <code>optional int64 dropMoney = 4;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    boolean hasDropMoney();
    /**
     * <code>optional int64 dropMoney = 4;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    long getDropMoney();

    /**
     * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
     *
     * <pre>
     * 鱼掉落的物品
     * </pre>
     */
    java.util.List<com.maple.game.osee.proto.OseePublicData.ItemDataProto> 
        getDropItemsList();
    /**
     * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
     *
     * <pre>
     * 鱼掉落的物品
     * </pre>
     */
    com.maple.game.osee.proto.OseePublicData.ItemDataProto getDropItems(int index);
    /**
     * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
     *
     * <pre>
     * 鱼掉落的物品
     * </pre>
     */
    int getDropItemsCount();
    /**
     * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
     *
     * <pre>
     * 鱼掉落的物品
     * </pre>
     */
    java.util.List<? extends com.maple.game.osee.proto.OseePublicData.ItemDataProtoOrBuilder> 
        getDropItemsOrBuilderList();
    /**
     * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
     *
     * <pre>
     * 鱼掉落的物品
     * </pre>
     */
    com.maple.game.osee.proto.OseePublicData.ItemDataProtoOrBuilder getDropItemsOrBuilder(
        int index);

    /**
     * <code>optional int64 multiple = 6;</code>
     *
     * <pre>
     * 鱼的倍数
     * </pre>
     */
    boolean hasMultiple();
    /**
     * <code>optional int64 multiple = 6;</code>
     *
     * <pre>
     * 鱼的倍数
     * </pre>
     */
    long getMultiple();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFightFishResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_FIGHT_FISH_RESPONSE = 0x20021032; // 捕鱼击中鱼类返回
   * </pre>
   */
  public static final class FishingChallengeFightFishResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeFightFishResponse)
      FishingChallengeFightFishResponseOrBuilder {
    // Use FishingChallengeFightFishResponse.newBuilder() to construct.
    private FishingChallengeFightFishResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeFightFishResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeFightFishResponse defaultInstance;
    public static FishingChallengeFightFishResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeFightFishResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeFightFishResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fishId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              restMoney_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              dropMoney_ = input.readInt64();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                dropItems_ = new java.util.ArrayList<com.maple.game.osee.proto.OseePublicData.ItemDataProto>();
                mutable_bitField0_ |= 0x00000010;
              }
              dropItems_.add(input.readMessage(com.maple.game.osee.proto.OseePublicData.ItemDataProto.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              multiple_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          dropItems_ = java.util.Collections.unmodifiableList(dropItems_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeFightFishResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeFightFishResponse>() {
      public FishingChallengeFightFishResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeFightFishResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeFightFishResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FISHID_FIELD_NUMBER = 1;
    private long fishId_;
    /**
     * <code>optional int64 fishId = 1;</code>
     *
     * <pre>
     * 鱼id
     * </pre>
     */
    public boolean hasFishId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 fishId = 1;</code>
     *
     * <pre>
     * 鱼id
     * </pre>
     */
    public long getFishId() {
      return fishId_;
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 2;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 playerId = 2;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    public static final int RESTMONEY_FIELD_NUMBER = 3;
    private long restMoney_;
    /**
     * <code>optional int64 restMoney = 3;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    public boolean hasRestMoney() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 restMoney = 3;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    public long getRestMoney() {
      return restMoney_;
    }

    public static final int DROPMONEY_FIELD_NUMBER = 4;
    private long dropMoney_;
    /**
     * <code>optional int64 dropMoney = 4;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    public boolean hasDropMoney() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 dropMoney = 4;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    public long getDropMoney() {
      return dropMoney_;
    }

    public static final int DROPITEMS_FIELD_NUMBER = 5;
    private java.util.List<com.maple.game.osee.proto.OseePublicData.ItemDataProto> dropItems_;
    /**
     * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
     *
     * <pre>
     * 鱼掉落的物品
     * </pre>
     */
    public java.util.List<com.maple.game.osee.proto.OseePublicData.ItemDataProto> getDropItemsList() {
      return dropItems_;
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
     *
     * <pre>
     * 鱼掉落的物品
     * </pre>
     */
    public java.util.List<? extends com.maple.game.osee.proto.OseePublicData.ItemDataProtoOrBuilder> 
        getDropItemsOrBuilderList() {
      return dropItems_;
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
     *
     * <pre>
     * 鱼掉落的物品
     * </pre>
     */
    public int getDropItemsCount() {
      return dropItems_.size();
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
     *
     * <pre>
     * 鱼掉落的物品
     * </pre>
     */
    public com.maple.game.osee.proto.OseePublicData.ItemDataProto getDropItems(int index) {
      return dropItems_.get(index);
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
     *
     * <pre>
     * 鱼掉落的物品
     * </pre>
     */
    public com.maple.game.osee.proto.OseePublicData.ItemDataProtoOrBuilder getDropItemsOrBuilder(
        int index) {
      return dropItems_.get(index);
    }

    public static final int MULTIPLE_FIELD_NUMBER = 6;
    private long multiple_;
    /**
     * <code>optional int64 multiple = 6;</code>
     *
     * <pre>
     * 鱼的倍数
     * </pre>
     */
    public boolean hasMultiple() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 multiple = 6;</code>
     *
     * <pre>
     * 鱼的倍数
     * </pre>
     */
    public long getMultiple() {
      return multiple_;
    }

    private void initFields() {
      fishId_ = 0L;
      playerId_ = 0L;
      restMoney_ = 0L;
      dropMoney_ = 0L;
      dropItems_ = java.util.Collections.emptyList();
      multiple_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, fishId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, restMoney_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, dropMoney_);
      }
      for (int i = 0; i < dropItems_.size(); i++) {
        output.writeMessage(5, dropItems_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, multiple_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, fishId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, restMoney_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, dropMoney_);
      }
      for (int i = 0; i < dropItems_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, dropItems_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, multiple_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFightFishResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_FIGHT_FISH_RESPONSE = 0x20021032; // 捕鱼击中鱼类返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeFightFishResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDropItemsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        restMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        dropMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (dropItemsBuilder_ == null) {
          dropItems_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          dropItemsBuilder_.clear();
        }
        multiple_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fishId_ = fishId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.restMoney_ = restMoney_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dropMoney_ = dropMoney_;
        if (dropItemsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            dropItems_ = java.util.Collections.unmodifiableList(dropItems_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.dropItems_ = dropItems_;
        } else {
          result.dropItems_ = dropItemsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.multiple_ = multiple_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse.getDefaultInstance()) return this;
        if (other.hasFishId()) {
          setFishId(other.getFishId());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasRestMoney()) {
          setRestMoney(other.getRestMoney());
        }
        if (other.hasDropMoney()) {
          setDropMoney(other.getDropMoney());
        }
        if (dropItemsBuilder_ == null) {
          if (!other.dropItems_.isEmpty()) {
            if (dropItems_.isEmpty()) {
              dropItems_ = other.dropItems_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureDropItemsIsMutable();
              dropItems_.addAll(other.dropItems_);
            }
            onChanged();
          }
        } else {
          if (!other.dropItems_.isEmpty()) {
            if (dropItemsBuilder_.isEmpty()) {
              dropItemsBuilder_.dispose();
              dropItemsBuilder_ = null;
              dropItems_ = other.dropItems_;
              bitField0_ = (bitField0_ & ~0x00000010);
              dropItemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDropItemsFieldBuilder() : null;
            } else {
              dropItemsBuilder_.addAllMessages(other.dropItems_);
            }
          }
        }
        if (other.hasMultiple()) {
          setMultiple(other.getMultiple());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFightFishResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long fishId_ ;
      /**
       * <code>optional int64 fishId = 1;</code>
       *
       * <pre>
       * 鱼id
       * </pre>
       */
      public boolean hasFishId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 fishId = 1;</code>
       *
       * <pre>
       * 鱼id
       * </pre>
       */
      public long getFishId() {
        return fishId_;
      }
      /**
       * <code>optional int64 fishId = 1;</code>
       *
       * <pre>
       * 鱼id
       * </pre>
       */
      public Builder setFishId(long value) {
        bitField0_ |= 0x00000001;
        fishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fishId = 1;</code>
       *
       * <pre>
       * 鱼id
       * </pre>
       */
      public Builder clearFishId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fishId_ = 0L;
        onChanged();
        return this;
      }

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 2;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 playerId = 2;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 2;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000002;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 2;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      private long restMoney_ ;
      /**
       * <code>optional int64 restMoney = 3;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public boolean hasRestMoney() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 restMoney = 3;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public long getRestMoney() {
        return restMoney_;
      }
      /**
       * <code>optional int64 restMoney = 3;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public Builder setRestMoney(long value) {
        bitField0_ |= 0x00000004;
        restMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 restMoney = 3;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public Builder clearRestMoney() {
        bitField0_ = (bitField0_ & ~0x00000004);
        restMoney_ = 0L;
        onChanged();
        return this;
      }

      private long dropMoney_ ;
      /**
       * <code>optional int64 dropMoney = 4;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public boolean hasDropMoney() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 dropMoney = 4;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public long getDropMoney() {
        return dropMoney_;
      }
      /**
       * <code>optional int64 dropMoney = 4;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public Builder setDropMoney(long value) {
        bitField0_ |= 0x00000008;
        dropMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 dropMoney = 4;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public Builder clearDropMoney() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dropMoney_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.maple.game.osee.proto.OseePublicData.ItemDataProto> dropItems_ =
        java.util.Collections.emptyList();
      private void ensureDropItemsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          dropItems_ = new java.util.ArrayList<com.maple.game.osee.proto.OseePublicData.ItemDataProto>(dropItems_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.maple.game.osee.proto.OseePublicData.ItemDataProto, com.maple.game.osee.proto.OseePublicData.ItemDataProto.Builder, com.maple.game.osee.proto.OseePublicData.ItemDataProtoOrBuilder> dropItemsBuilder_;

      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public java.util.List<com.maple.game.osee.proto.OseePublicData.ItemDataProto> getDropItemsList() {
        if (dropItemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dropItems_);
        } else {
          return dropItemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public int getDropItemsCount() {
        if (dropItemsBuilder_ == null) {
          return dropItems_.size();
        } else {
          return dropItemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public com.maple.game.osee.proto.OseePublicData.ItemDataProto getDropItems(int index) {
        if (dropItemsBuilder_ == null) {
          return dropItems_.get(index);
        } else {
          return dropItemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public Builder setDropItems(
          int index, com.maple.game.osee.proto.OseePublicData.ItemDataProto value) {
        if (dropItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropItemsIsMutable();
          dropItems_.set(index, value);
          onChanged();
        } else {
          dropItemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public Builder setDropItems(
          int index, com.maple.game.osee.proto.OseePublicData.ItemDataProto.Builder builderForValue) {
        if (dropItemsBuilder_ == null) {
          ensureDropItemsIsMutable();
          dropItems_.set(index, builderForValue.build());
          onChanged();
        } else {
          dropItemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public Builder addDropItems(com.maple.game.osee.proto.OseePublicData.ItemDataProto value) {
        if (dropItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropItemsIsMutable();
          dropItems_.add(value);
          onChanged();
        } else {
          dropItemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public Builder addDropItems(
          int index, com.maple.game.osee.proto.OseePublicData.ItemDataProto value) {
        if (dropItemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropItemsIsMutable();
          dropItems_.add(index, value);
          onChanged();
        } else {
          dropItemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public Builder addDropItems(
          com.maple.game.osee.proto.OseePublicData.ItemDataProto.Builder builderForValue) {
        if (dropItemsBuilder_ == null) {
          ensureDropItemsIsMutable();
          dropItems_.add(builderForValue.build());
          onChanged();
        } else {
          dropItemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public Builder addDropItems(
          int index, com.maple.game.osee.proto.OseePublicData.ItemDataProto.Builder builderForValue) {
        if (dropItemsBuilder_ == null) {
          ensureDropItemsIsMutable();
          dropItems_.add(index, builderForValue.build());
          onChanged();
        } else {
          dropItemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public Builder addAllDropItems(
          java.lang.Iterable<? extends com.maple.game.osee.proto.OseePublicData.ItemDataProto> values) {
        if (dropItemsBuilder_ == null) {
          ensureDropItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dropItems_);
          onChanged();
        } else {
          dropItemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public Builder clearDropItems() {
        if (dropItemsBuilder_ == null) {
          dropItems_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          dropItemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public Builder removeDropItems(int index) {
        if (dropItemsBuilder_ == null) {
          ensureDropItemsIsMutable();
          dropItems_.remove(index);
          onChanged();
        } else {
          dropItemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public com.maple.game.osee.proto.OseePublicData.ItemDataProto.Builder getDropItemsBuilder(
          int index) {
        return getDropItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public com.maple.game.osee.proto.OseePublicData.ItemDataProtoOrBuilder getDropItemsOrBuilder(
          int index) {
        if (dropItemsBuilder_ == null) {
          return dropItems_.get(index);  } else {
          return dropItemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public java.util.List<? extends com.maple.game.osee.proto.OseePublicData.ItemDataProtoOrBuilder> 
           getDropItemsOrBuilderList() {
        if (dropItemsBuilder_ != null) {
          return dropItemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dropItems_);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public com.maple.game.osee.proto.OseePublicData.ItemDataProto.Builder addDropItemsBuilder() {
        return getDropItemsFieldBuilder().addBuilder(
            com.maple.game.osee.proto.OseePublicData.ItemDataProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public com.maple.game.osee.proto.OseePublicData.ItemDataProto.Builder addDropItemsBuilder(
          int index) {
        return getDropItemsFieldBuilder().addBuilder(
            index, com.maple.game.osee.proto.OseePublicData.ItemDataProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.ItemDataProto dropItems = 5;</code>
       *
       * <pre>
       * 鱼掉落的物品
       * </pre>
       */
      public java.util.List<com.maple.game.osee.proto.OseePublicData.ItemDataProto.Builder> 
           getDropItemsBuilderList() {
        return getDropItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.maple.game.osee.proto.OseePublicData.ItemDataProto, com.maple.game.osee.proto.OseePublicData.ItemDataProto.Builder, com.maple.game.osee.proto.OseePublicData.ItemDataProtoOrBuilder> 
          getDropItemsFieldBuilder() {
        if (dropItemsBuilder_ == null) {
          dropItemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.maple.game.osee.proto.OseePublicData.ItemDataProto, com.maple.game.osee.proto.OseePublicData.ItemDataProto.Builder, com.maple.game.osee.proto.OseePublicData.ItemDataProtoOrBuilder>(
                  dropItems_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          dropItems_ = null;
        }
        return dropItemsBuilder_;
      }

      private long multiple_ ;
      /**
       * <code>optional int64 multiple = 6;</code>
       *
       * <pre>
       * 鱼的倍数
       * </pre>
       */
      public boolean hasMultiple() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 multiple = 6;</code>
       *
       * <pre>
       * 鱼的倍数
       * </pre>
       */
      public long getMultiple() {
        return multiple_;
      }
      /**
       * <code>optional int64 multiple = 6;</code>
       *
       * <pre>
       * 鱼的倍数
       * </pre>
       */
      public Builder setMultiple(long value) {
        bitField0_ |= 0x00000020;
        multiple_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 multiple = 6;</code>
       *
       * <pre>
       * 鱼的倍数
       * </pre>
       */
      public Builder clearMultiple() {
        bitField0_ = (bitField0_ & ~0x00000020);
        multiple_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeFightFishResponse)
    }

    static {
      defaultInstance = new FishingChallengeFightFishResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeFightFishResponse)
  }

  public interface FishingChallengeRefreshFishesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeRefreshFishesResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> 
        getFishInfosList();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto getFishInfos(int index);
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    int getFishInfosCount();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder> 
        getFishInfosOrBuilderList();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder getFishInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRefreshFishesResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_REFRESH_FISHES_RESPONSE = 0x20021033; // 捕鱼刷新房间鱼类返回
   * </pre>
   */
  public static final class FishingChallengeRefreshFishesResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeRefreshFishesResponse)
      FishingChallengeRefreshFishesResponseOrBuilder {
    // Use FishingChallengeRefreshFishesResponse.newBuilder() to construct.
    private FishingChallengeRefreshFishesResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeRefreshFishesResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeRefreshFishesResponse defaultInstance;
    public static FishingChallengeRefreshFishesResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeRefreshFishesResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeRefreshFishesResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fishInfos_ = new java.util.ArrayList<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              fishInfos_.add(input.readMessage(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fishInfos_ = java.util.Collections.unmodifiableList(fishInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshFishesResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshFishesResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeRefreshFishesResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeRefreshFishesResponse>() {
      public FishingChallengeRefreshFishesResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeRefreshFishesResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeRefreshFishesResponse> getParserForType() {
      return PARSER;
    }

    public static final int FISHINFOS_FIELD_NUMBER = 1;
    private java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> fishInfos_;
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> getFishInfosList() {
      return fishInfos_;
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    public java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder> 
        getFishInfosOrBuilderList() {
      return fishInfos_;
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    public int getFishInfosCount() {
      return fishInfos_.size();
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto getFishInfos(int index) {
      return fishInfos_.get(index);
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder getFishInfosOrBuilder(
        int index) {
      return fishInfos_.get(index);
    }

    private void initFields() {
      fishInfos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < fishInfos_.size(); i++) {
        output.writeMessage(1, fishInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fishInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fishInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRefreshFishesResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_REFRESH_FISHES_RESPONSE = 0x20021033; // 捕鱼刷新房间鱼类返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeRefreshFishesResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshFishesResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshFishesResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFishInfosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fishInfosBuilder_ == null) {
          fishInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fishInfosBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshFishesResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse(this);
        int from_bitField0_ = bitField0_;
        if (fishInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fishInfos_ = java.util.Collections.unmodifiableList(fishInfos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fishInfos_ = fishInfos_;
        } else {
          result.fishInfos_ = fishInfosBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse.getDefaultInstance()) return this;
        if (fishInfosBuilder_ == null) {
          if (!other.fishInfos_.isEmpty()) {
            if (fishInfos_.isEmpty()) {
              fishInfos_ = other.fishInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFishInfosIsMutable();
              fishInfos_.addAll(other.fishInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.fishInfos_.isEmpty()) {
            if (fishInfosBuilder_.isEmpty()) {
              fishInfosBuilder_.dispose();
              fishInfosBuilder_ = null;
              fishInfos_ = other.fishInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fishInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFishInfosFieldBuilder() : null;
            } else {
              fishInfosBuilder_.addAllMessages(other.fishInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshFishesResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> fishInfos_ =
        java.util.Collections.emptyList();
      private void ensureFishInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fishInfos_ = new java.util.ArrayList<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto>(fishInfos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder> fishInfosBuilder_;

      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> getFishInfosList() {
        if (fishInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fishInfos_);
        } else {
          return fishInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public int getFishInfosCount() {
        if (fishInfosBuilder_ == null) {
          return fishInfos_.size();
        } else {
          return fishInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto getFishInfos(int index) {
        if (fishInfosBuilder_ == null) {
          return fishInfos_.get(index);
        } else {
          return fishInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder setFishInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto value) {
        if (fishInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFishInfosIsMutable();
          fishInfos_.set(index, value);
          onChanged();
        } else {
          fishInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder setFishInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder builderForValue) {
        if (fishInfosBuilder_ == null) {
          ensureFishInfosIsMutable();
          fishInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          fishInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder addFishInfos(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto value) {
        if (fishInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFishInfosIsMutable();
          fishInfos_.add(value);
          onChanged();
        } else {
          fishInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder addFishInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto value) {
        if (fishInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFishInfosIsMutable();
          fishInfos_.add(index, value);
          onChanged();
        } else {
          fishInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder addFishInfos(
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder builderForValue) {
        if (fishInfosBuilder_ == null) {
          ensureFishInfosIsMutable();
          fishInfos_.add(builderForValue.build());
          onChanged();
        } else {
          fishInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder addFishInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder builderForValue) {
        if (fishInfosBuilder_ == null) {
          ensureFishInfosIsMutable();
          fishInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          fishInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder addAllFishInfos(
          java.lang.Iterable<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> values) {
        if (fishInfosBuilder_ == null) {
          ensureFishInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fishInfos_);
          onChanged();
        } else {
          fishInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder clearFishInfos() {
        if (fishInfosBuilder_ == null) {
          fishInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fishInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder removeFishInfos(int index) {
        if (fishInfosBuilder_ == null) {
          ensureFishInfosIsMutable();
          fishInfos_.remove(index);
          onChanged();
        } else {
          fishInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder getFishInfosBuilder(
          int index) {
        return getFishInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder getFishInfosOrBuilder(
          int index) {
        if (fishInfosBuilder_ == null) {
          return fishInfos_.get(index);  } else {
          return fishInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder> 
           getFishInfosOrBuilderList() {
        if (fishInfosBuilder_ != null) {
          return fishInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fishInfos_);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder addFishInfosBuilder() {
        return getFishInfosFieldBuilder().addBuilder(
            com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder addFishInfosBuilder(
          int index) {
        return getFishInfosFieldBuilder().addBuilder(
            index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder> 
           getFishInfosBuilderList() {
        return getFishInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder> 
          getFishInfosFieldBuilder() {
        if (fishInfosBuilder_ == null) {
          fishInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder>(
                  fishInfos_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fishInfos_ = null;
        }
        return fishInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeRefreshFishesResponse)
    }

    static {
      defaultInstance = new FishingChallengeRefreshFishesResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeRefreshFishesResponse)
  }

  public interface FishingChallengeSynchroniseRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_SYNCHRONISE_REQUEST = 0x10021034; // 捕鱼同步请求
   * </pre>
   */
  public static final class FishingChallengeSynchroniseRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseRequest)
      FishingChallengeSynchroniseRequestOrBuilder {
    // Use FishingChallengeSynchroniseRequest.newBuilder() to construct.
    private FishingChallengeSynchroniseRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeSynchroniseRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeSynchroniseRequest defaultInstance;
    public static FishingChallengeSynchroniseRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeSynchroniseRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeSynchroniseRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeSynchroniseRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeSynchroniseRequest>() {
      public FishingChallengeSynchroniseRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeSynchroniseRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeSynchroniseRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_SYNCHRONISE_REQUEST = 0x10021034; // 捕鱼同步请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseRequest)
    }

    static {
      defaultInstance = new FishingChallengeSynchroniseRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseRequest)
  }

  public interface FishingChallengeSynchroniseResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> 
        getFishInfosList();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto getFishInfos(int index);
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    int getFishInfosCount();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder> 
        getFishInfosOrBuilderList();
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder getFishInfosOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_SYNCHRONISE_RESPONSE = 0x20021034; // 捕鱼同步返回
   * </pre>
   */
  public static final class FishingChallengeSynchroniseResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseResponse)
      FishingChallengeSynchroniseResponseOrBuilder {
    // Use FishingChallengeSynchroniseResponse.newBuilder() to construct.
    private FishingChallengeSynchroniseResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeSynchroniseResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeSynchroniseResponse defaultInstance;
    public static FishingChallengeSynchroniseResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeSynchroniseResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeSynchroniseResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fishInfos_ = new java.util.ArrayList<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto>();
                mutable_bitField0_ |= 0x00000001;
              }
              fishInfos_.add(input.readMessage(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fishInfos_ = java.util.Collections.unmodifiableList(fishInfos_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeSynchroniseResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeSynchroniseResponse>() {
      public FishingChallengeSynchroniseResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeSynchroniseResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeSynchroniseResponse> getParserForType() {
      return PARSER;
    }

    public static final int FISHINFOS_FIELD_NUMBER = 1;
    private java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> fishInfos_;
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> getFishInfosList() {
      return fishInfos_;
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    public java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder> 
        getFishInfosOrBuilderList() {
      return fishInfos_;
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    public int getFishInfosCount() {
      return fishInfos_.size();
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto getFishInfos(int index) {
      return fishInfos_.get(index);
    }
    /**
     * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
     *
     * <pre>
     * 鱼类数据列表
     * </pre>
     */
    public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder getFishInfosOrBuilder(
        int index) {
      return fishInfos_.get(index);
    }

    private void initFields() {
      fishInfos_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < fishInfos_.size(); i++) {
        output.writeMessage(1, fishInfos_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fishInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fishInfos_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_SYNCHRONISE_RESPONSE = 0x20021034; // 捕鱼同步返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFishInfosFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (fishInfosBuilder_ == null) {
          fishInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fishInfosBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse(this);
        int from_bitField0_ = bitField0_;
        if (fishInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            fishInfos_ = java.util.Collections.unmodifiableList(fishInfos_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fishInfos_ = fishInfos_;
        } else {
          result.fishInfos_ = fishInfosBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse.getDefaultInstance()) return this;
        if (fishInfosBuilder_ == null) {
          if (!other.fishInfos_.isEmpty()) {
            if (fishInfos_.isEmpty()) {
              fishInfos_ = other.fishInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFishInfosIsMutable();
              fishInfos_.addAll(other.fishInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.fishInfos_.isEmpty()) {
            if (fishInfosBuilder_.isEmpty()) {
              fishInfosBuilder_.dispose();
              fishInfosBuilder_ = null;
              fishInfos_ = other.fishInfos_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fishInfosBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFishInfosFieldBuilder() : null;
            } else {
              fishInfosBuilder_.addAllMessages(other.fishInfos_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeSynchroniseResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> fishInfos_ =
        java.util.Collections.emptyList();
      private void ensureFishInfosIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fishInfos_ = new java.util.ArrayList<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto>(fishInfos_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder> fishInfosBuilder_;

      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> getFishInfosList() {
        if (fishInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fishInfos_);
        } else {
          return fishInfosBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public int getFishInfosCount() {
        if (fishInfosBuilder_ == null) {
          return fishInfos_.size();
        } else {
          return fishInfosBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto getFishInfos(int index) {
        if (fishInfosBuilder_ == null) {
          return fishInfos_.get(index);
        } else {
          return fishInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder setFishInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto value) {
        if (fishInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFishInfosIsMutable();
          fishInfos_.set(index, value);
          onChanged();
        } else {
          fishInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder setFishInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder builderForValue) {
        if (fishInfosBuilder_ == null) {
          ensureFishInfosIsMutable();
          fishInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          fishInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder addFishInfos(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto value) {
        if (fishInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFishInfosIsMutable();
          fishInfos_.add(value);
          onChanged();
        } else {
          fishInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder addFishInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto value) {
        if (fishInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFishInfosIsMutable();
          fishInfos_.add(index, value);
          onChanged();
        } else {
          fishInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder addFishInfos(
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder builderForValue) {
        if (fishInfosBuilder_ == null) {
          ensureFishInfosIsMutable();
          fishInfos_.add(builderForValue.build());
          onChanged();
        } else {
          fishInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder addFishInfos(
          int index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder builderForValue) {
        if (fishInfosBuilder_ == null) {
          ensureFishInfosIsMutable();
          fishInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          fishInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder addAllFishInfos(
          java.lang.Iterable<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto> values) {
        if (fishInfosBuilder_ == null) {
          ensureFishInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fishInfos_);
          onChanged();
        } else {
          fishInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder clearFishInfos() {
        if (fishInfosBuilder_ == null) {
          fishInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fishInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public Builder removeFishInfos(int index) {
        if (fishInfosBuilder_ == null) {
          ensureFishInfosIsMutable();
          fishInfos_.remove(index);
          onChanged();
        } else {
          fishInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder getFishInfosBuilder(
          int index) {
        return getFishInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder getFishInfosOrBuilder(
          int index) {
        if (fishInfosBuilder_ == null) {
          return fishInfos_.get(index);  } else {
          return fishInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public java.util.List<? extends com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder> 
           getFishInfosOrBuilderList() {
        if (fishInfosBuilder_ != null) {
          return fishInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fishInfos_);
        }
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder addFishInfosBuilder() {
        return getFishInfosFieldBuilder().addBuilder(
            com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder addFishInfosBuilder(
          int index) {
        return getFishInfosFieldBuilder().addBuilder(
            index, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.getDefaultInstance());
      }
      /**
       * <code>repeated .com.maple.game.osee.proto.fishing.FishingChallengeFishInfoProto fishInfos = 1;</code>
       *
       * <pre>
       * 鱼类数据列表
       * </pre>
       */
      public java.util.List<com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder> 
           getFishInfosBuilderList() {
        return getFishInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder> 
          getFishInfosFieldBuilder() {
        if (fishInfosBuilder_ == null) {
          fishInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProto.Builder, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishInfoProtoOrBuilder>(
                  fishInfos_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          fishInfos_ = null;
        }
        return fishInfosBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseResponse)
    }

    static {
      defaultInstance = new FishingChallengeSynchroniseResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeSynchroniseResponse)
  }

  public interface FishingChallengeFishTideResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeFishTideResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFishTideResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_FISH_TIDE_RESPONSE = 0x20021035; // 捕鱼鱼潮返回
   * </pre>
   */
  public static final class FishingChallengeFishTideResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeFishTideResponse)
      FishingChallengeFishTideResponseOrBuilder {
    // Use FishingChallengeFishTideResponse.newBuilder() to construct.
    private FishingChallengeFishTideResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeFishTideResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeFishTideResponse defaultInstance;
    public static FishingChallengeFishTideResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeFishTideResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeFishTideResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishTideResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishTideResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeFishTideResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeFishTideResponse>() {
      public FishingChallengeFishTideResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeFishTideResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeFishTideResponse> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeFishTideResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_FISH_TIDE_RESPONSE = 0x20021035; // 捕鱼鱼潮返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeFishTideResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishTideResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishTideResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishTideResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeFishTideResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeFishTideResponse)
    }

    static {
      defaultInstance = new FishingChallengeFishTideResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeFishTideResponse)
  }

  public interface FishingChallengeReactiveRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeReactiveRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeReactiveRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_REACTIVE_REQUEST = 0x10021036; // 捕鱼重新激活请求
   * </pre>
   */
  public static final class FishingChallengeReactiveRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeReactiveRequest)
      FishingChallengeReactiveRequestOrBuilder {
    // Use FishingChallengeReactiveRequest.newBuilder() to construct.
    private FishingChallengeReactiveRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeReactiveRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeReactiveRequest defaultInstance;
    public static FishingChallengeReactiveRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeReactiveRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeReactiveRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeReactiveRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeReactiveRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeReactiveRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeReactiveRequest>() {
      public FishingChallengeReactiveRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeReactiveRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeReactiveRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeReactiveRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_REACTIVE_REQUEST = 0x10021036; // 捕鱼重新激活请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeReactiveRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeReactiveRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeReactiveRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeReactiveRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeReactiveRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeReactiveRequest)
    }

    static {
      defaultInstance = new FishingChallengeReactiveRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeReactiveRequest)
  }

  public interface FishingChallengeUseSkillRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeUseSkillRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 skillId = 1;</code>
     *
     * <pre>
     * 技能id
     * </pre>
     */
    boolean hasSkillId();
    /**
     * <code>optional int32 skillId = 1;</code>
     *
     * <pre>
     * 技能id
     * </pre>
     */
    int getSkillId();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseSkillRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_USE_SKILL_REQUEST = 0x10021037; // 捕鱼使用技能请求
   * </pre>
   */
  public static final class FishingChallengeUseSkillRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseSkillRequest)
      FishingChallengeUseSkillRequestOrBuilder {
    // Use FishingChallengeUseSkillRequest.newBuilder() to construct.
    private FishingChallengeUseSkillRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeUseSkillRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeUseSkillRequest defaultInstance;
    public static FishingChallengeUseSkillRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeUseSkillRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeUseSkillRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              skillId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeUseSkillRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeUseSkillRequest>() {
      public FishingChallengeUseSkillRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeUseSkillRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeUseSkillRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SKILLID_FIELD_NUMBER = 1;
    private int skillId_;
    /**
     * <code>optional int32 skillId = 1;</code>
     *
     * <pre>
     * 技能id
     * </pre>
     */
    public boolean hasSkillId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 skillId = 1;</code>
     *
     * <pre>
     * 技能id
     * </pre>
     */
    public int getSkillId() {
      return skillId_;
    }

    private void initFields() {
      skillId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, skillId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, skillId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseSkillRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_USE_SKILL_REQUEST = 0x10021037; // 捕鱼使用技能请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseSkillRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        skillId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.skillId_ = skillId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest.getDefaultInstance()) return this;
        if (other.hasSkillId()) {
          setSkillId(other.getSkillId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int skillId_ ;
      /**
       * <code>optional int32 skillId = 1;</code>
       *
       * <pre>
       * 技能id
       * </pre>
       */
      public boolean hasSkillId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 skillId = 1;</code>
       *
       * <pre>
       * 技能id
       * </pre>
       */
      public int getSkillId() {
        return skillId_;
      }
      /**
       * <code>optional int32 skillId = 1;</code>
       *
       * <pre>
       * 技能id
       * </pre>
       */
      public Builder setSkillId(int value) {
        bitField0_ |= 0x00000001;
        skillId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 skillId = 1;</code>
       *
       * <pre>
       * 技能id
       * </pre>
       */
      public Builder clearSkillId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        skillId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseSkillRequest)
    }

    static {
      defaultInstance = new FishingChallengeUseSkillRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseSkillRequest)
  }

  public interface FishingChallengeUseSkillResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeUseSkillResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 skillId = 1;</code>
     *
     * <pre>
     * 技能id
     * </pre>
     */
    boolean hasSkillId();
    /**
     * <code>optional int64 skillId = 1;</code>
     *
     * <pre>
     * 技能id
     * </pre>
     */
    long getSkillId();

    /**
     * <code>optional int32 duration = 2;</code>
     *
     * <pre>
     * 持续时间
     * </pre>
     */
    boolean hasDuration();
    /**
     * <code>optional int32 duration = 2;</code>
     *
     * <pre>
     * 持续时间
     * </pre>
     */
    int getDuration();

    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    long getPlayerId();

    /**
     * <code>repeated int64 fishIds = 4;</code>
     *
     * <pre>
     * 影响鱼的id列表
     * </pre>
     */
    java.util.List<java.lang.Long> getFishIdsList();
    /**
     * <code>repeated int64 fishIds = 4;</code>
     *
     * <pre>
     * 影响鱼的id列表
     * </pre>
     */
    int getFishIdsCount();
    /**
     * <code>repeated int64 fishIds = 4;</code>
     *
     * <pre>
     * 影响鱼的id列表
     * </pre>
     */
    long getFishIds(int index);

    /**
     * <code>optional int64 restMoney = 5;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    boolean hasRestMoney();
    /**
     * <code>optional int64 restMoney = 5;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    long getRestMoney();

    /**
     * <code>optional int64 dropMoney = 6;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    boolean hasDropMoney();
    /**
     * <code>optional int64 dropMoney = 6;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    long getDropMoney();

    /**
     * <code>optional int64 skillFishId = 7;</code>
     *
     * <pre>
     * 触发技能的鱼id
     * </pre>
     */
    boolean hasSkillFishId();
    /**
     * <code>optional int64 skillFishId = 7;</code>
     *
     * <pre>
     * 触发技能的鱼id
     * </pre>
     */
    long getSkillFishId();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseSkillResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_USE_SKILL_RESPONSE = 0x20021037; // 捕鱼使用技能返回
   * </pre>
   */
  public static final class FishingChallengeUseSkillResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseSkillResponse)
      FishingChallengeUseSkillResponseOrBuilder {
    // Use FishingChallengeUseSkillResponse.newBuilder() to construct.
    private FishingChallengeUseSkillResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeUseSkillResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeUseSkillResponse defaultInstance;
    public static FishingChallengeUseSkillResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeUseSkillResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeUseSkillResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              skillId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              duration_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              playerId_ = input.readInt64();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                fishIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              fishIds_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                fishIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                fishIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              restMoney_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              dropMoney_ = input.readInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              skillFishId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          fishIds_ = java.util.Collections.unmodifiableList(fishIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeUseSkillResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeUseSkillResponse>() {
      public FishingChallengeUseSkillResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeUseSkillResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeUseSkillResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SKILLID_FIELD_NUMBER = 1;
    private long skillId_;
    /**
     * <code>optional int64 skillId = 1;</code>
     *
     * <pre>
     * 技能id
     * </pre>
     */
    public boolean hasSkillId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 skillId = 1;</code>
     *
     * <pre>
     * 技能id
     * </pre>
     */
    public long getSkillId() {
      return skillId_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private int duration_;
    /**
     * <code>optional int32 duration = 2;</code>
     *
     * <pre>
     * 持续时间
     * </pre>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 duration = 2;</code>
     *
     * <pre>
     * 持续时间
     * </pre>
     */
    public int getDuration() {
      return duration_;
    }

    public static final int PLAYERID_FIELD_NUMBER = 3;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    public static final int FISHIDS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> fishIds_;
    /**
     * <code>repeated int64 fishIds = 4;</code>
     *
     * <pre>
     * 影响鱼的id列表
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getFishIdsList() {
      return fishIds_;
    }
    /**
     * <code>repeated int64 fishIds = 4;</code>
     *
     * <pre>
     * 影响鱼的id列表
     * </pre>
     */
    public int getFishIdsCount() {
      return fishIds_.size();
    }
    /**
     * <code>repeated int64 fishIds = 4;</code>
     *
     * <pre>
     * 影响鱼的id列表
     * </pre>
     */
    public long getFishIds(int index) {
      return fishIds_.get(index);
    }

    public static final int RESTMONEY_FIELD_NUMBER = 5;
    private long restMoney_;
    /**
     * <code>optional int64 restMoney = 5;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    public boolean hasRestMoney() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 restMoney = 5;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    public long getRestMoney() {
      return restMoney_;
    }

    public static final int DROPMONEY_FIELD_NUMBER = 6;
    private long dropMoney_;
    /**
     * <code>optional int64 dropMoney = 6;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    public boolean hasDropMoney() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 dropMoney = 6;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    public long getDropMoney() {
      return dropMoney_;
    }

    public static final int SKILLFISHID_FIELD_NUMBER = 7;
    private long skillFishId_;
    /**
     * <code>optional int64 skillFishId = 7;</code>
     *
     * <pre>
     * 触发技能的鱼id
     * </pre>
     */
    public boolean hasSkillFishId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int64 skillFishId = 7;</code>
     *
     * <pre>
     * 触发技能的鱼id
     * </pre>
     */
    public long getSkillFishId() {
      return skillFishId_;
    }

    private void initFields() {
      skillId_ = 0L;
      duration_ = 0;
      playerId_ = 0L;
      fishIds_ = java.util.Collections.emptyList();
      restMoney_ = 0L;
      dropMoney_ = 0L;
      skillFishId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, skillId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, duration_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, playerId_);
      }
      for (int i = 0; i < fishIds_.size(); i++) {
        output.writeInt64(4, fishIds_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(5, restMoney_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(6, dropMoney_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(7, skillFishId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, skillId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, duration_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, playerId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fishIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(fishIds_.get(i));
        }
        size += dataSize;
        size += 1 * getFishIdsList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, restMoney_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, dropMoney_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, skillFishId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseSkillResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_USE_SKILL_RESPONSE = 0x20021037; // 捕鱼使用技能返回
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseSkillResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        skillId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        fishIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        restMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        dropMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        skillFishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.skillId_ = skillId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerId_ = playerId_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          fishIds_ = java.util.Collections.unmodifiableList(fishIds_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.fishIds_ = fishIds_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.restMoney_ = restMoney_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dropMoney_ = dropMoney_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.skillFishId_ = skillFishId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse.getDefaultInstance()) return this;
        if (other.hasSkillId()) {
          setSkillId(other.getSkillId());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (!other.fishIds_.isEmpty()) {
          if (fishIds_.isEmpty()) {
            fishIds_ = other.fishIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureFishIdsIsMutable();
            fishIds_.addAll(other.fishIds_);
          }
          onChanged();
        }
        if (other.hasRestMoney()) {
          setRestMoney(other.getRestMoney());
        }
        if (other.hasDropMoney()) {
          setDropMoney(other.getDropMoney());
        }
        if (other.hasSkillFishId()) {
          setSkillFishId(other.getSkillFishId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseSkillResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long skillId_ ;
      /**
       * <code>optional int64 skillId = 1;</code>
       *
       * <pre>
       * 技能id
       * </pre>
       */
      public boolean hasSkillId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 skillId = 1;</code>
       *
       * <pre>
       * 技能id
       * </pre>
       */
      public long getSkillId() {
        return skillId_;
      }
      /**
       * <code>optional int64 skillId = 1;</code>
       *
       * <pre>
       * 技能id
       * </pre>
       */
      public Builder setSkillId(long value) {
        bitField0_ |= 0x00000001;
        skillId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 skillId = 1;</code>
       *
       * <pre>
       * 技能id
       * </pre>
       */
      public Builder clearSkillId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        skillId_ = 0L;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>optional int32 duration = 2;</code>
       *
       * <pre>
       * 持续时间
       * </pre>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 duration = 2;</code>
       *
       * <pre>
       * 持续时间
       * </pre>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional int32 duration = 2;</code>
       *
       * <pre>
       * 持续时间
       * </pre>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000002;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 duration = 2;</code>
       *
       * <pre>
       * 持续时间
       * </pre>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0;
        onChanged();
        return this;
      }

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000004;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> fishIds_ = java.util.Collections.emptyList();
      private void ensureFishIdsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          fishIds_ = new java.util.ArrayList<java.lang.Long>(fishIds_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 fishIds = 4;</code>
       *
       * <pre>
       * 影响鱼的id列表
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFishIdsList() {
        return java.util.Collections.unmodifiableList(fishIds_);
      }
      /**
       * <code>repeated int64 fishIds = 4;</code>
       *
       * <pre>
       * 影响鱼的id列表
       * </pre>
       */
      public int getFishIdsCount() {
        return fishIds_.size();
      }
      /**
       * <code>repeated int64 fishIds = 4;</code>
       *
       * <pre>
       * 影响鱼的id列表
       * </pre>
       */
      public long getFishIds(int index) {
        return fishIds_.get(index);
      }
      /**
       * <code>repeated int64 fishIds = 4;</code>
       *
       * <pre>
       * 影响鱼的id列表
       * </pre>
       */
      public Builder setFishIds(
          int index, long value) {
        ensureFishIdsIsMutable();
        fishIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishIds = 4;</code>
       *
       * <pre>
       * 影响鱼的id列表
       * </pre>
       */
      public Builder addFishIds(long value) {
        ensureFishIdsIsMutable();
        fishIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishIds = 4;</code>
       *
       * <pre>
       * 影响鱼的id列表
       * </pre>
       */
      public Builder addAllFishIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFishIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fishIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishIds = 4;</code>
       *
       * <pre>
       * 影响鱼的id列表
       * </pre>
       */
      public Builder clearFishIds() {
        fishIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private long restMoney_ ;
      /**
       * <code>optional int64 restMoney = 5;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public boolean hasRestMoney() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 restMoney = 5;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public long getRestMoney() {
        return restMoney_;
      }
      /**
       * <code>optional int64 restMoney = 5;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public Builder setRestMoney(long value) {
        bitField0_ |= 0x00000010;
        restMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 restMoney = 5;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public Builder clearRestMoney() {
        bitField0_ = (bitField0_ & ~0x00000010);
        restMoney_ = 0L;
        onChanged();
        return this;
      }

      private long dropMoney_ ;
      /**
       * <code>optional int64 dropMoney = 6;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public boolean hasDropMoney() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int64 dropMoney = 6;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public long getDropMoney() {
        return dropMoney_;
      }
      /**
       * <code>optional int64 dropMoney = 6;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public Builder setDropMoney(long value) {
        bitField0_ |= 0x00000020;
        dropMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 dropMoney = 6;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public Builder clearDropMoney() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dropMoney_ = 0L;
        onChanged();
        return this;
      }

      private long skillFishId_ ;
      /**
       * <code>optional int64 skillFishId = 7;</code>
       *
       * <pre>
       * 触发技能的鱼id
       * </pre>
       */
      public boolean hasSkillFishId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 skillFishId = 7;</code>
       *
       * <pre>
       * 触发技能的鱼id
       * </pre>
       */
      public long getSkillFishId() {
        return skillFishId_;
      }
      /**
       * <code>optional int64 skillFishId = 7;</code>
       *
       * <pre>
       * 触发技能的鱼id
       * </pre>
       */
      public Builder setSkillFishId(long value) {
        bitField0_ |= 0x00000040;
        skillFishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 skillFishId = 7;</code>
       *
       * <pre>
       * 触发技能的鱼id
       * </pre>
       */
      public Builder clearSkillFishId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        skillFishId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseSkillResponse)
    }

    static {
      defaultInstance = new FishingChallengeUseSkillResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseSkillResponse)
  }

  public interface FishingChallengeCatchBossFishResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeCatchBossFishResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string fishName = 1;</code>
     *
     * <pre>
     * 鱼名称
     * </pre>
     */
    boolean hasFishName();
    /**
     * <code>optional string fishName = 1;</code>
     *
     * <pre>
     * 鱼名称
     * </pre>
     */
    java.lang.String getFishName();
    /**
     * <code>optional string fishName = 1;</code>
     *
     * <pre>
     * 鱼名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getFishNameBytes();

    /**
     * <code>optional int64 money = 2;</code>
     *
     * <pre>
     * boss爆出来的金币
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 2;</code>
     *
     * <pre>
     * boss爆出来的金币
     * </pre>
     */
    long getMoney();

    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    boolean hasPlayerName();
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    java.lang.String getPlayerName();
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();

    /**
     * <code>optional int32 playerVipLevel = 4;</code>
     *
     * <pre>
     * 玩家vip等级
     * </pre>
     */
    boolean hasPlayerVipLevel();
    /**
     * <code>optional int32 playerVipLevel = 4;</code>
     *
     * <pre>
     * 玩家vip等级
     * </pre>
     */
    int getPlayerVipLevel();

    /**
     * <code>optional int32 batteryLevel = 5;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    boolean hasBatteryLevel();
    /**
     * <code>optional int32 batteryLevel = 5;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    int getBatteryLevel();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeCatchBossFishResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_CATCH_BOSS_FISH_RESPONSE = 0x20021038; // 玩家捕获boss鱼响应
   * </pre>
   */
  public static final class FishingChallengeCatchBossFishResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeCatchBossFishResponse)
      FishingChallengeCatchBossFishResponseOrBuilder {
    // Use FishingChallengeCatchBossFishResponse.newBuilder() to construct.
    private FishingChallengeCatchBossFishResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeCatchBossFishResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeCatchBossFishResponse defaultInstance;
    public static FishingChallengeCatchBossFishResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeCatchBossFishResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeCatchBossFishResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              fishName_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              money_ = input.readInt64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              playerName_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              playerVipLevel_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              batteryLevel_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchBossFishResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchBossFishResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeCatchBossFishResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeCatchBossFishResponse>() {
      public FishingChallengeCatchBossFishResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeCatchBossFishResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeCatchBossFishResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FISHNAME_FIELD_NUMBER = 1;
    private java.lang.Object fishName_;
    /**
     * <code>optional string fishName = 1;</code>
     *
     * <pre>
     * 鱼名称
     * </pre>
     */
    public boolean hasFishName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string fishName = 1;</code>
     *
     * <pre>
     * 鱼名称
     * </pre>
     */
    public java.lang.String getFishName() {
      java.lang.Object ref = fishName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fishName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fishName = 1;</code>
     *
     * <pre>
     * 鱼名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFishNameBytes() {
      java.lang.Object ref = fishName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fishName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MONEY_FIELD_NUMBER = 2;
    private long money_;
    /**
     * <code>optional int64 money = 2;</code>
     *
     * <pre>
     * boss爆出来的金币
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 money = 2;</code>
     *
     * <pre>
     * boss爆出来的金币
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    public static final int PLAYERNAME_FIELD_NUMBER = 3;
    private java.lang.Object playerName_;
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string playerName = 3;</code>
     *
     * <pre>
     * 玩家昵称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYERVIPLEVEL_FIELD_NUMBER = 4;
    private int playerVipLevel_;
    /**
     * <code>optional int32 playerVipLevel = 4;</code>
     *
     * <pre>
     * 玩家vip等级
     * </pre>
     */
    public boolean hasPlayerVipLevel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 playerVipLevel = 4;</code>
     *
     * <pre>
     * 玩家vip等级
     * </pre>
     */
    public int getPlayerVipLevel() {
      return playerVipLevel_;
    }

    public static final int BATTERYLEVEL_FIELD_NUMBER = 5;
    private int batteryLevel_;
    /**
     * <code>optional int32 batteryLevel = 5;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    public boolean hasBatteryLevel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 batteryLevel = 5;</code>
     *
     * <pre>
     * 炮台等级
     * </pre>
     */
    public int getBatteryLevel() {
      return batteryLevel_;
    }

    private void initFields() {
      fishName_ = "";
      money_ = 0L;
      playerName_ = "";
      playerVipLevel_ = 0;
      batteryLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFishNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, money_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, playerVipLevel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, batteryLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFishNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, money_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, playerVipLevel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, batteryLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeCatchBossFishResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_CATCH_BOSS_FISH_RESPONSE = 0x20021038; // 玩家捕获boss鱼响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeCatchBossFishResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchBossFishResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchBossFishResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fishName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        playerVipLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        batteryLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchBossFishResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fishName_ = fishName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.money_ = money_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerName_ = playerName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerVipLevel_ = playerVipLevel_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.batteryLevel_ = batteryLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse.getDefaultInstance()) return this;
        if (other.hasFishName()) {
          bitField0_ |= 0x00000001;
          fishName_ = other.fishName_;
          onChanged();
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        if (other.hasPlayerName()) {
          bitField0_ |= 0x00000004;
          playerName_ = other.playerName_;
          onChanged();
        }
        if (other.hasPlayerVipLevel()) {
          setPlayerVipLevel(other.getPlayerVipLevel());
        }
        if (other.hasBatteryLevel()) {
          setBatteryLevel(other.getBatteryLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchBossFishResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object fishName_ = "";
      /**
       * <code>optional string fishName = 1;</code>
       *
       * <pre>
       * 鱼名称
       * </pre>
       */
      public boolean hasFishName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string fishName = 1;</code>
       *
       * <pre>
       * 鱼名称
       * </pre>
       */
      public java.lang.String getFishName() {
        java.lang.Object ref = fishName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fishName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fishName = 1;</code>
       *
       * <pre>
       * 鱼名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFishNameBytes() {
        java.lang.Object ref = fishName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fishName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fishName = 1;</code>
       *
       * <pre>
       * 鱼名称
       * </pre>
       */
      public Builder setFishName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fishName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fishName = 1;</code>
       *
       * <pre>
       * 鱼名称
       * </pre>
       */
      public Builder clearFishName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fishName_ = getDefaultInstance().getFishName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fishName = 1;</code>
       *
       * <pre>
       * 鱼名称
       * </pre>
       */
      public Builder setFishNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fishName_ = value;
        onChanged();
        return this;
      }

      private long money_ ;
      /**
       * <code>optional int64 money = 2;</code>
       *
       * <pre>
       * boss爆出来的金币
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 money = 2;</code>
       *
       * <pre>
       * boss爆出来的金币
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 2;</code>
       *
       * <pre>
       * boss爆出来的金币
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00000002;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 2;</code>
       *
       * <pre>
       * boss爆出来的金币
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00000002);
        money_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object playerName_ = "";
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public Builder setPlayerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string playerName = 3;</code>
       *
       * <pre>
       * 玩家昵称
       * </pre>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        playerName_ = value;
        onChanged();
        return this;
      }

      private int playerVipLevel_ ;
      /**
       * <code>optional int32 playerVipLevel = 4;</code>
       *
       * <pre>
       * 玩家vip等级
       * </pre>
       */
      public boolean hasPlayerVipLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 playerVipLevel = 4;</code>
       *
       * <pre>
       * 玩家vip等级
       * </pre>
       */
      public int getPlayerVipLevel() {
        return playerVipLevel_;
      }
      /**
       * <code>optional int32 playerVipLevel = 4;</code>
       *
       * <pre>
       * 玩家vip等级
       * </pre>
       */
      public Builder setPlayerVipLevel(int value) {
        bitField0_ |= 0x00000008;
        playerVipLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 playerVipLevel = 4;</code>
       *
       * <pre>
       * 玩家vip等级
       * </pre>
       */
      public Builder clearPlayerVipLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerVipLevel_ = 0;
        onChanged();
        return this;
      }

      private int batteryLevel_ ;
      /**
       * <code>optional int32 batteryLevel = 5;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public boolean hasBatteryLevel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 batteryLevel = 5;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public int getBatteryLevel() {
        return batteryLevel_;
      }
      /**
       * <code>optional int32 batteryLevel = 5;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public Builder setBatteryLevel(int value) {
        bitField0_ |= 0x00000010;
        batteryLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batteryLevel = 5;</code>
       *
       * <pre>
       * 炮台等级
       * </pre>
       */
      public Builder clearBatteryLevel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        batteryLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeCatchBossFishResponse)
    }

    static {
      defaultInstance = new FishingChallengeCatchBossFishResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeCatchBossFishResponse)
  }

  public interface FishingChallengeCatchSpecialFishRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    java.util.List<java.lang.Long> getFishIdsList();
    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    int getFishIdsCount();
    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    long getFishIds(int index);

    /**
     * <code>optional int64 specialFishId = 2;</code>
     *
     * <pre>
     * 特殊鱼id
     * </pre>
     */
    boolean hasSpecialFishId();
    /**
     * <code>optional int64 specialFishId = 2;</code>
     *
     * <pre>
     * 特殊鱼id
     * </pre>
     */
    long getSpecialFishId();

    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    long getPlayerId();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_CATCH_SPECIAL_FISH_REQUEST = 0x10021039; // 捕捉到特殊鱼请求
   * </pre>
   */
  public static final class FishingChallengeCatchSpecialFishRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishRequest)
      FishingChallengeCatchSpecialFishRequestOrBuilder {
    // Use FishingChallengeCatchSpecialFishRequest.newBuilder() to construct.
    private FishingChallengeCatchSpecialFishRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeCatchSpecialFishRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeCatchSpecialFishRequest defaultInstance;
    public static FishingChallengeCatchSpecialFishRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeCatchSpecialFishRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeCatchSpecialFishRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fishIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              fishIds_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                fishIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                fishIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              specialFishId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fishIds_ = java.util.Collections.unmodifiableList(fishIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeCatchSpecialFishRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeCatchSpecialFishRequest>() {
      public FishingChallengeCatchSpecialFishRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeCatchSpecialFishRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeCatchSpecialFishRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FISHIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> fishIds_;
    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getFishIdsList() {
      return fishIds_;
    }
    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    public int getFishIdsCount() {
      return fishIds_.size();
    }
    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    public long getFishIds(int index) {
      return fishIds_.get(index);
    }

    public static final int SPECIALFISHID_FIELD_NUMBER = 2;
    private long specialFishId_;
    /**
     * <code>optional int64 specialFishId = 2;</code>
     *
     * <pre>
     * 特殊鱼id
     * </pre>
     */
    public boolean hasSpecialFishId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 specialFishId = 2;</code>
     *
     * <pre>
     * 特殊鱼id
     * </pre>
     */
    public long getSpecialFishId() {
      return specialFishId_;
    }

    public static final int PLAYERID_FIELD_NUMBER = 3;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    private void initFields() {
      fishIds_ = java.util.Collections.emptyList();
      specialFishId_ = 0L;
      playerId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < fishIds_.size(); i++) {
        output.writeInt64(1, fishIds_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(2, specialFishId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, playerId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < fishIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(fishIds_.get(i));
        }
        size += dataSize;
        size += 1 * getFishIdsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, specialFishId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, playerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_CATCH_SPECIAL_FISH_REQUEST = 0x10021039; // 捕捉到特殊鱼请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fishIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        specialFishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          fishIds_ = java.util.Collections.unmodifiableList(fishIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fishIds_ = fishIds_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.specialFishId_ = specialFishId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest.getDefaultInstance()) return this;
        if (!other.fishIds_.isEmpty()) {
          if (fishIds_.isEmpty()) {
            fishIds_ = other.fishIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFishIdsIsMutable();
            fishIds_.addAll(other.fishIds_);
          }
          onChanged();
        }
        if (other.hasSpecialFishId()) {
          setSpecialFishId(other.getSpecialFishId());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> fishIds_ = java.util.Collections.emptyList();
      private void ensureFishIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fishIds_ = new java.util.ArrayList<java.lang.Long>(fishIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFishIdsList() {
        return java.util.Collections.unmodifiableList(fishIds_);
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public int getFishIdsCount() {
        return fishIds_.size();
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public long getFishIds(int index) {
        return fishIds_.get(index);
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public Builder setFishIds(
          int index, long value) {
        ensureFishIdsIsMutable();
        fishIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public Builder addFishIds(long value) {
        ensureFishIdsIsMutable();
        fishIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public Builder addAllFishIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFishIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fishIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public Builder clearFishIds() {
        fishIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private long specialFishId_ ;
      /**
       * <code>optional int64 specialFishId = 2;</code>
       *
       * <pre>
       * 特殊鱼id
       * </pre>
       */
      public boolean hasSpecialFishId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 specialFishId = 2;</code>
       *
       * <pre>
       * 特殊鱼id
       * </pre>
       */
      public long getSpecialFishId() {
        return specialFishId_;
      }
      /**
       * <code>optional int64 specialFishId = 2;</code>
       *
       * <pre>
       * 特殊鱼id
       * </pre>
       */
      public Builder setSpecialFishId(long value) {
        bitField0_ |= 0x00000002;
        specialFishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 specialFishId = 2;</code>
       *
       * <pre>
       * 特殊鱼id
       * </pre>
       */
      public Builder clearSpecialFishId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        specialFishId_ = 0L;
        onChanged();
        return this;
      }

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000004;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishRequest)
    }

    static {
      defaultInstance = new FishingChallengeCatchSpecialFishRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishRequest)
  }

  public interface FishingChallengeCatchSpecialFishResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    java.util.List<java.lang.Long> getFishIdsList();
    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    int getFishIdsCount();
    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    long getFishIds(int index);

    /**
     * <code>optional int64 specialFishId = 2;</code>
     *
     * <pre>
     * 特殊鱼id
     * </pre>
     */
    boolean hasSpecialFishId();
    /**
     * <code>optional int64 specialFishId = 2;</code>
     *
     * <pre>
     * 特殊鱼id
     * </pre>
     */
    long getSpecialFishId();

    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    long getPlayerId();

    /**
     * <code>optional int64 restMoney = 4;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    boolean hasRestMoney();
    /**
     * <code>optional int64 restMoney = 4;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    long getRestMoney();

    /**
     * <code>optional int64 dropMoney = 5;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    boolean hasDropMoney();
    /**
     * <code>optional int64 dropMoney = 5;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    long getDropMoney();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_CATCH_SPECIAL_FISH_RESPONSE = 0x20021039; // 捕捉到特殊鱼响应
   * </pre>
   */
  public static final class FishingChallengeCatchSpecialFishResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishResponse)
      FishingChallengeCatchSpecialFishResponseOrBuilder {
    // Use FishingChallengeCatchSpecialFishResponse.newBuilder() to construct.
    private FishingChallengeCatchSpecialFishResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeCatchSpecialFishResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeCatchSpecialFishResponse defaultInstance;
    public static FishingChallengeCatchSpecialFishResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeCatchSpecialFishResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeCatchSpecialFishResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                fishIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              fishIds_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                fishIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                fishIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              specialFishId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              playerId_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              restMoney_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              dropMoney_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          fishIds_ = java.util.Collections.unmodifiableList(fishIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeCatchSpecialFishResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeCatchSpecialFishResponse>() {
      public FishingChallengeCatchSpecialFishResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeCatchSpecialFishResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeCatchSpecialFishResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FISHIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> fishIds_;
    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getFishIdsList() {
      return fishIds_;
    }
    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    public int getFishIdsCount() {
      return fishIds_.size();
    }
    /**
     * <code>repeated int64 fishIds = 1;</code>
     *
     * <pre>
     * 特殊鱼所影响的目标鱼id
     * </pre>
     */
    public long getFishIds(int index) {
      return fishIds_.get(index);
    }

    public static final int SPECIALFISHID_FIELD_NUMBER = 2;
    private long specialFishId_;
    /**
     * <code>optional int64 specialFishId = 2;</code>
     *
     * <pre>
     * 特殊鱼id
     * </pre>
     */
    public boolean hasSpecialFishId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 specialFishId = 2;</code>
     *
     * <pre>
     * 特殊鱼id
     * </pre>
     */
    public long getSpecialFishId() {
      return specialFishId_;
    }

    public static final int PLAYERID_FIELD_NUMBER = 3;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 playerId = 3;</code>
     *
     * <pre>
     * 玩家id
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    public static final int RESTMONEY_FIELD_NUMBER = 4;
    private long restMoney_;
    /**
     * <code>optional int64 restMoney = 4;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    public boolean hasRestMoney() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 restMoney = 4;</code>
     *
     * <pre>
     * 剩余金币
     * </pre>
     */
    public long getRestMoney() {
      return restMoney_;
    }

    public static final int DROPMONEY_FIELD_NUMBER = 5;
    private long dropMoney_;
    /**
     * <code>optional int64 dropMoney = 5;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    public boolean hasDropMoney() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 dropMoney = 5;</code>
     *
     * <pre>
     * 掉落金币
     * </pre>
     */
    public long getDropMoney() {
      return dropMoney_;
    }

    private void initFields() {
      fishIds_ = java.util.Collections.emptyList();
      specialFishId_ = 0L;
      playerId_ = 0L;
      restMoney_ = 0L;
      dropMoney_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < fishIds_.size(); i++) {
        output.writeInt64(1, fishIds_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(2, specialFishId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, restMoney_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(5, dropMoney_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < fishIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(fishIds_.get(i));
        }
        size += dataSize;
        size += 1 * getFishIdsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, specialFishId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, playerId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, restMoney_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, dropMoney_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_CATCH_SPECIAL_FISH_RESPONSE = 0x20021039; // 捕捉到特殊鱼响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fishIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        specialFishId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        restMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        dropMoney_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          fishIds_ = java.util.Collections.unmodifiableList(fishIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fishIds_ = fishIds_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.specialFishId_ = specialFishId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.restMoney_ = restMoney_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dropMoney_ = dropMoney_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse.getDefaultInstance()) return this;
        if (!other.fishIds_.isEmpty()) {
          if (fishIds_.isEmpty()) {
            fishIds_ = other.fishIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFishIdsIsMutable();
            fishIds_.addAll(other.fishIds_);
          }
          onChanged();
        }
        if (other.hasSpecialFishId()) {
          setSpecialFishId(other.getSpecialFishId());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasRestMoney()) {
          setRestMoney(other.getRestMoney());
        }
        if (other.hasDropMoney()) {
          setDropMoney(other.getDropMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeCatchSpecialFishResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> fishIds_ = java.util.Collections.emptyList();
      private void ensureFishIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          fishIds_ = new java.util.ArrayList<java.lang.Long>(fishIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getFishIdsList() {
        return java.util.Collections.unmodifiableList(fishIds_);
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public int getFishIdsCount() {
        return fishIds_.size();
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public long getFishIds(int index) {
        return fishIds_.get(index);
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public Builder setFishIds(
          int index, long value) {
        ensureFishIdsIsMutable();
        fishIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public Builder addFishIds(long value) {
        ensureFishIdsIsMutable();
        fishIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public Builder addAllFishIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFishIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fishIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 fishIds = 1;</code>
       *
       * <pre>
       * 特殊鱼所影响的目标鱼id
       * </pre>
       */
      public Builder clearFishIds() {
        fishIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private long specialFishId_ ;
      /**
       * <code>optional int64 specialFishId = 2;</code>
       *
       * <pre>
       * 特殊鱼id
       * </pre>
       */
      public boolean hasSpecialFishId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 specialFishId = 2;</code>
       *
       * <pre>
       * 特殊鱼id
       * </pre>
       */
      public long getSpecialFishId() {
        return specialFishId_;
      }
      /**
       * <code>optional int64 specialFishId = 2;</code>
       *
       * <pre>
       * 特殊鱼id
       * </pre>
       */
      public Builder setSpecialFishId(long value) {
        bitField0_ |= 0x00000002;
        specialFishId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 specialFishId = 2;</code>
       *
       * <pre>
       * 特殊鱼id
       * </pre>
       */
      public Builder clearSpecialFishId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        specialFishId_ = 0L;
        onChanged();
        return this;
      }

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000004;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 3;</code>
       *
       * <pre>
       * 玩家id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      private long restMoney_ ;
      /**
       * <code>optional int64 restMoney = 4;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public boolean hasRestMoney() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 restMoney = 4;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public long getRestMoney() {
        return restMoney_;
      }
      /**
       * <code>optional int64 restMoney = 4;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public Builder setRestMoney(long value) {
        bitField0_ |= 0x00000008;
        restMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 restMoney = 4;</code>
       *
       * <pre>
       * 剩余金币
       * </pre>
       */
      public Builder clearRestMoney() {
        bitField0_ = (bitField0_ & ~0x00000008);
        restMoney_ = 0L;
        onChanged();
        return this;
      }

      private long dropMoney_ ;
      /**
       * <code>optional int64 dropMoney = 5;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public boolean hasDropMoney() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 dropMoney = 5;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public long getDropMoney() {
        return dropMoney_;
      }
      /**
       * <code>optional int64 dropMoney = 5;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public Builder setDropMoney(long value) {
        bitField0_ |= 0x00000010;
        dropMoney_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 dropMoney = 5;</code>
       *
       * <pre>
       * 掉落金币
       * </pre>
       */
      public Builder clearDropMoney() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dropMoney_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishResponse)
    }

    static {
      defaultInstance = new FishingChallengeCatchSpecialFishResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeCatchSpecialFishResponse)
  }

  public interface FishingChallengeUseBossBugleRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_USE_BOSS_BUGLE_REQUEST = 0x10021040; // 使用boss号角请求
   * </pre>
   */
  public static final class FishingChallengeUseBossBugleRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleRequest)
      FishingChallengeUseBossBugleRequestOrBuilder {
    // Use FishingChallengeUseBossBugleRequest.newBuilder() to construct.
    private FishingChallengeUseBossBugleRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeUseBossBugleRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeUseBossBugleRequest defaultInstance;
    public static FishingChallengeUseBossBugleRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeUseBossBugleRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeUseBossBugleRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeUseBossBugleRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeUseBossBugleRequest>() {
      public FishingChallengeUseBossBugleRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeUseBossBugleRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeUseBossBugleRequest> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_USE_BOSS_BUGLE_REQUEST = 0x10021040; // 使用boss号角请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleRequest)
    }

    static {
      defaultInstance = new FishingChallengeUseBossBugleRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleRequest)
  }

  public interface FishingChallengeUseBossBugleResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 使用号角的玩家ID
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 使用号角的玩家ID
     * </pre>
     */
    long getPlayerId();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_USE_BOSS_BUGLE_RESPONSE = 0x20021040; // 使用boss号角响应
   * </pre>
   */
  public static final class FishingChallengeUseBossBugleResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleResponse)
      FishingChallengeUseBossBugleResponseOrBuilder {
    // Use FishingChallengeUseBossBugleResponse.newBuilder() to construct.
    private FishingChallengeUseBossBugleResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeUseBossBugleResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeUseBossBugleResponse defaultInstance;
    public static FishingChallengeUseBossBugleResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeUseBossBugleResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeUseBossBugleResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              playerId_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeUseBossBugleResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeUseBossBugleResponse>() {
      public FishingChallengeUseBossBugleResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeUseBossBugleResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeUseBossBugleResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 使用号角的玩家ID
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 playerId = 1;</code>
     *
     * <pre>
     * 使用号角的玩家ID
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    private void initFields() {
      playerId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, playerId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, playerId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_USE_BOSS_BUGLE_RESPONSE = 0x20021040; // 使用boss号角响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.playerId_ = playerId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse.getDefaultInstance()) return this;
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseBossBugleResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 使用号角的玩家ID
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 使用号角的玩家ID
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 使用号角的玩家ID
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000001;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 1;</code>
       *
       * <pre>
       * 使用号角的玩家ID
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleResponse)
    }

    static {
      defaultInstance = new FishingChallengeUseBossBugleResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseBossBugleResponse)
  }

  public interface FishingChallengeRefreshBossResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeRefreshBossResponse)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRefreshBossResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_CHALLENGE_REFRESH_BOSS_RESPONSE = 0x20031041; // 房间刷新了boss响应
   * </pre>
   */
  public static final class FishingChallengeRefreshBossResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeRefreshBossResponse)
      FishingChallengeRefreshBossResponseOrBuilder {
    // Use FishingChallengeRefreshBossResponse.newBuilder() to construct.
    private FishingChallengeRefreshBossResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeRefreshBossResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeRefreshBossResponse defaultInstance;
    public static FishingChallengeRefreshBossResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeRefreshBossResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeRefreshBossResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshBossResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshBossResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeRefreshBossResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeRefreshBossResponse>() {
      public FishingChallengeRefreshBossResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeRefreshBossResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeRefreshBossResponse> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeRefreshBossResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_CHALLENGE_REFRESH_BOSS_RESPONSE = 0x20031041; // 房间刷新了boss响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeRefreshBossResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshBossResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshBossResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshBossResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeRefreshBossResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeRefreshBossResponse)
    }

    static {
      defaultInstance = new FishingChallengeRefreshBossResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeRefreshBossResponse)
  }

  public interface FishingChallengeChangeSeatRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeChangeSeatRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 seat = 1;</code>
     *
     * <pre>
     * 座位序号
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>optional int32 seat = 1;</code>
     *
     * <pre>
     * 座位序号
     * </pre>
     */
    int getSeat();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeChangeSeatRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_CHALLENGE_CHANGE_SEAT_REQUEST = 0x10031042; // VIP换座请求
   * </pre>
   */
  public static final class FishingChallengeChangeSeatRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeChangeSeatRequest)
      FishingChallengeChangeSeatRequestOrBuilder {
    // Use FishingChallengeChangeSeatRequest.newBuilder() to construct.
    private FishingChallengeChangeSeatRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeChangeSeatRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeChangeSeatRequest defaultInstance;
    public static FishingChallengeChangeSeatRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeChangeSeatRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeChangeSeatRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seat_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeSeatRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeSeatRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeChangeSeatRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeChangeSeatRequest>() {
      public FishingChallengeChangeSeatRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeChangeSeatRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeChangeSeatRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SEAT_FIELD_NUMBER = 1;
    private int seat_;
    /**
     * <code>optional int32 seat = 1;</code>
     *
     * <pre>
     * 座位序号
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 seat = 1;</code>
     *
     * <pre>
     * 座位序号
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    private void initFields() {
      seat_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seat_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeChangeSeatRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_CHALLENGE_CHANGE_SEAT_REQUEST = 0x10031042; // VIP换座请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeChangeSeatRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeSeatRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeSeatRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeSeatRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seat_ = seat_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest.getDefaultInstance()) return this;
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeChangeSeatRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int seat_ ;
      /**
       * <code>optional int32 seat = 1;</code>
       *
       * <pre>
       * 座位序号
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 seat = 1;</code>
       *
       * <pre>
       * 座位序号
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>optional int32 seat = 1;</code>
       *
       * <pre>
       * 座位序号
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000001;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat = 1;</code>
       *
       * <pre>
       * 座位序号
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seat_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeChangeSeatRequest)
    }

    static {
      defaultInstance = new FishingChallengeChangeSeatRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeChangeSeatRequest)
  }

  public interface FishingChallengeUseTorpedoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 torpedoId = 1;</code>
     *
     * <pre>
     * 鱼雷id
     * </pre>
     */
    boolean hasTorpedoId();
    /**
     * <code>optional int32 torpedoId = 1;</code>
     *
     * <pre>
     * 鱼雷id
     * </pre>
     */
    int getTorpedoId();

    /**
     * <code>optional int32 torpedoNum = 2;</code>
     *
     * <pre>
     * 鱼雷数量
     * </pre>
     */
    boolean hasTorpedoNum();
    /**
     * <code>optional int32 torpedoNum = 2;</code>
     *
     * <pre>
     * 鱼雷数量
     * </pre>
     */
    int getTorpedoNum();

    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    boolean hasAngle();
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    float getAngle();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoRequest}
   *
   * <pre>
   * C_S_TTMY_FISHING_Challenge_USE_TORPEDO_REQUEST = 0x10021043; // 使用鱼雷请求
   * </pre>
   */
  public static final class FishingChallengeUseTorpedoRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoRequest)
      FishingChallengeUseTorpedoRequestOrBuilder {
    // Use FishingChallengeUseTorpedoRequest.newBuilder() to construct.
    private FishingChallengeUseTorpedoRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeUseTorpedoRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeUseTorpedoRequest defaultInstance;
    public static FishingChallengeUseTorpedoRequest getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeUseTorpedoRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeUseTorpedoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              torpedoId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              torpedoNum_ = input.readInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              angle_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeUseTorpedoRequest> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeUseTorpedoRequest>() {
      public FishingChallengeUseTorpedoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeUseTorpedoRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeUseTorpedoRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TORPEDOID_FIELD_NUMBER = 1;
    private int torpedoId_;
    /**
     * <code>optional int32 torpedoId = 1;</code>
     *
     * <pre>
     * 鱼雷id
     * </pre>
     */
    public boolean hasTorpedoId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 torpedoId = 1;</code>
     *
     * <pre>
     * 鱼雷id
     * </pre>
     */
    public int getTorpedoId() {
      return torpedoId_;
    }

    public static final int TORPEDONUM_FIELD_NUMBER = 2;
    private int torpedoNum_;
    /**
     * <code>optional int32 torpedoNum = 2;</code>
     *
     * <pre>
     * 鱼雷数量
     * </pre>
     */
    public boolean hasTorpedoNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 torpedoNum = 2;</code>
     *
     * <pre>
     * 鱼雷数量
     * </pre>
     */
    public int getTorpedoNum() {
      return torpedoNum_;
    }

    public static final int ANGLE_FIELD_NUMBER = 3;
    private float angle_;
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    public boolean hasAngle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    public float getAngle() {
      return angle_;
    }

    private void initFields() {
      torpedoId_ = 0;
      torpedoNum_ = 0;
      angle_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, torpedoId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, torpedoNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, angle_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, torpedoId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, torpedoNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, angle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoRequest}
     *
     * <pre>
     * C_S_TTMY_FISHING_Challenge_USE_TORPEDO_REQUEST = 0x10021043; // 使用鱼雷请求
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoRequest)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        torpedoId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        torpedoNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoRequest_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.torpedoId_ = torpedoId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.torpedoNum_ = torpedoNum_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.angle_ = angle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest.getDefaultInstance()) return this;
        if (other.hasTorpedoId()) {
          setTorpedoId(other.getTorpedoId());
        }
        if (other.hasTorpedoNum()) {
          setTorpedoNum(other.getTorpedoNum());
        }
        if (other.hasAngle()) {
          setAngle(other.getAngle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int torpedoId_ ;
      /**
       * <code>optional int32 torpedoId = 1;</code>
       *
       * <pre>
       * 鱼雷id
       * </pre>
       */
      public boolean hasTorpedoId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 torpedoId = 1;</code>
       *
       * <pre>
       * 鱼雷id
       * </pre>
       */
      public int getTorpedoId() {
        return torpedoId_;
      }
      /**
       * <code>optional int32 torpedoId = 1;</code>
       *
       * <pre>
       * 鱼雷id
       * </pre>
       */
      public Builder setTorpedoId(int value) {
        bitField0_ |= 0x00000001;
        torpedoId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 torpedoId = 1;</code>
       *
       * <pre>
       * 鱼雷id
       * </pre>
       */
      public Builder clearTorpedoId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        torpedoId_ = 0;
        onChanged();
        return this;
      }

      private int torpedoNum_ ;
      /**
       * <code>optional int32 torpedoNum = 2;</code>
       *
       * <pre>
       * 鱼雷数量
       * </pre>
       */
      public boolean hasTorpedoNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 torpedoNum = 2;</code>
       *
       * <pre>
       * 鱼雷数量
       * </pre>
       */
      public int getTorpedoNum() {
        return torpedoNum_;
      }
      /**
       * <code>optional int32 torpedoNum = 2;</code>
       *
       * <pre>
       * 鱼雷数量
       * </pre>
       */
      public Builder setTorpedoNum(int value) {
        bitField0_ |= 0x00000002;
        torpedoNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 torpedoNum = 2;</code>
       *
       * <pre>
       * 鱼雷数量
       * </pre>
       */
      public Builder clearTorpedoNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        torpedoNum_ = 0;
        onChanged();
        return this;
      }

      private float angle_ ;
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public boolean hasAngle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public float getAngle() {
        return angle_;
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public Builder setAngle(float value) {
        bitField0_ |= 0x00000004;
        angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public Builder clearAngle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        angle_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoRequest)
    }

    static {
      defaultInstance = new FishingChallengeUseTorpedoRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoRequest)
  }

  public interface FishingChallengeUseTorpedoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 torpedoId = 1;</code>
     *
     * <pre>
     * 鱼雷id
     * </pre>
     */
    boolean hasTorpedoId();
    /**
     * <code>optional int32 torpedoId = 1;</code>
     *
     * <pre>
     * 鱼雷id
     * </pre>
     */
    int getTorpedoId();

    /**
     * <code>optional int32 torpedoNum = 2;</code>
     *
     * <pre>
     * 鱼雷数量
     * </pre>
     */
    boolean hasTorpedoNum();
    /**
     * <code>optional int32 torpedoNum = 2;</code>
     *
     * <pre>
     * 鱼雷数量
     * </pre>
     */
    int getTorpedoNum();

    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    boolean hasAngle();
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    float getAngle();

    /**
     * <code>optional int64 playerId = 4;</code>
     *
     * <pre>
     * 使用鱼雷的玩家id
     * </pre>
     */
    boolean hasPlayerId();
    /**
     * <code>optional int64 playerId = 4;</code>
     *
     * <pre>
     * 使用鱼雷的玩家id
     * </pre>
     */
    long getPlayerId();

    /**
     * <code>optional int64 money = 5;</code>
     *
     * <pre>
     * 鱼雷爆出的金币数量
     * </pre>
     */
    boolean hasMoney();
    /**
     * <code>optional int64 money = 5;</code>
     *
     * <pre>
     * 鱼雷爆出的金币数量
     * </pre>
     */
    long getMoney();
  }
  /**
   * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoResponse}
   *
   * <pre>
   * S_C_TTMY_FISHING_Challenge_USE_TORPEDO_RESPONSE = 0x20021043; // 使用鱼雷响应
   * </pre>
   */
  public static final class FishingChallengeUseTorpedoResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoResponse)
      FishingChallengeUseTorpedoResponseOrBuilder {
    // Use FishingChallengeUseTorpedoResponse.newBuilder() to construct.
    private FishingChallengeUseTorpedoResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FishingChallengeUseTorpedoResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FishingChallengeUseTorpedoResponse defaultInstance;
    public static FishingChallengeUseTorpedoResponse getDefaultInstance() {
      return defaultInstance;
    }

    public FishingChallengeUseTorpedoResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FishingChallengeUseTorpedoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              torpedoId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              torpedoNum_ = input.readInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              angle_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              playerId_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              money_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<FishingChallengeUseTorpedoResponse> PARSER =
        new com.google.protobuf.AbstractParser<FishingChallengeUseTorpedoResponse>() {
      public FishingChallengeUseTorpedoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FishingChallengeUseTorpedoResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FishingChallengeUseTorpedoResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TORPEDOID_FIELD_NUMBER = 1;
    private int torpedoId_;
    /**
     * <code>optional int32 torpedoId = 1;</code>
     *
     * <pre>
     * 鱼雷id
     * </pre>
     */
    public boolean hasTorpedoId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 torpedoId = 1;</code>
     *
     * <pre>
     * 鱼雷id
     * </pre>
     */
    public int getTorpedoId() {
      return torpedoId_;
    }

    public static final int TORPEDONUM_FIELD_NUMBER = 2;
    private int torpedoNum_;
    /**
     * <code>optional int32 torpedoNum = 2;</code>
     *
     * <pre>
     * 鱼雷数量
     * </pre>
     */
    public boolean hasTorpedoNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 torpedoNum = 2;</code>
     *
     * <pre>
     * 鱼雷数量
     * </pre>
     */
    public int getTorpedoNum() {
      return torpedoNum_;
    }

    public static final int ANGLE_FIELD_NUMBER = 3;
    private float angle_;
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    public boolean hasAngle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float angle = 3;</code>
     *
     * <pre>
     * 角度
     * </pre>
     */
    public float getAngle() {
      return angle_;
    }

    public static final int PLAYERID_FIELD_NUMBER = 4;
    private long playerId_;
    /**
     * <code>optional int64 playerId = 4;</code>
     *
     * <pre>
     * 使用鱼雷的玩家id
     * </pre>
     */
    public boolean hasPlayerId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 playerId = 4;</code>
     *
     * <pre>
     * 使用鱼雷的玩家id
     * </pre>
     */
    public long getPlayerId() {
      return playerId_;
    }

    public static final int MONEY_FIELD_NUMBER = 5;
    private long money_;
    /**
     * <code>optional int64 money = 5;</code>
     *
     * <pre>
     * 鱼雷爆出的金币数量
     * </pre>
     */
    public boolean hasMoney() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 money = 5;</code>
     *
     * <pre>
     * 鱼雷爆出的金币数量
     * </pre>
     */
    public long getMoney() {
      return money_;
    }

    private void initFields() {
      torpedoId_ = 0;
      torpedoNum_ = 0;
      angle_ = 0F;
      playerId_ = 0L;
      money_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, torpedoId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, torpedoNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, angle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, playerId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, money_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, torpedoId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, torpedoNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, angle_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, playerId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, money_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoResponse}
     *
     * <pre>
     * S_C_TTMY_FISHING_Challenge_USE_TORPEDO_RESPONSE = 0x20021043; // 使用鱼雷响应
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoResponse)
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse.class, com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse.Builder.class);
      }

      // Construct using com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        torpedoId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        torpedoNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        angle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        playerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        money_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoResponse_descriptor;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse getDefaultInstanceForType() {
        return com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse.getDefaultInstance();
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse build() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse buildPartial() {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse result = new com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.torpedoId_ = torpedoId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.torpedoNum_ = torpedoNum_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.angle_ = angle_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerId_ = playerId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.money_ = money_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse) {
          return mergeFrom((com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse other) {
        if (other == com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse.getDefaultInstance()) return this;
        if (other.hasTorpedoId()) {
          setTorpedoId(other.getTorpedoId());
        }
        if (other.hasTorpedoNum()) {
          setTorpedoNum(other.getTorpedoNum());
        }
        if (other.hasAngle()) {
          setAngle(other.getAngle());
        }
        if (other.hasPlayerId()) {
          setPlayerId(other.getPlayerId());
        }
        if (other.hasMoney()) {
          setMoney(other.getMoney());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.maple.game.osee.proto.fishing.TtmyFishingChallengeMessage.FishingChallengeUseTorpedoResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int torpedoId_ ;
      /**
       * <code>optional int32 torpedoId = 1;</code>
       *
       * <pre>
       * 鱼雷id
       * </pre>
       */
      public boolean hasTorpedoId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 torpedoId = 1;</code>
       *
       * <pre>
       * 鱼雷id
       * </pre>
       */
      public int getTorpedoId() {
        return torpedoId_;
      }
      /**
       * <code>optional int32 torpedoId = 1;</code>
       *
       * <pre>
       * 鱼雷id
       * </pre>
       */
      public Builder setTorpedoId(int value) {
        bitField0_ |= 0x00000001;
        torpedoId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 torpedoId = 1;</code>
       *
       * <pre>
       * 鱼雷id
       * </pre>
       */
      public Builder clearTorpedoId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        torpedoId_ = 0;
        onChanged();
        return this;
      }

      private int torpedoNum_ ;
      /**
       * <code>optional int32 torpedoNum = 2;</code>
       *
       * <pre>
       * 鱼雷数量
       * </pre>
       */
      public boolean hasTorpedoNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 torpedoNum = 2;</code>
       *
       * <pre>
       * 鱼雷数量
       * </pre>
       */
      public int getTorpedoNum() {
        return torpedoNum_;
      }
      /**
       * <code>optional int32 torpedoNum = 2;</code>
       *
       * <pre>
       * 鱼雷数量
       * </pre>
       */
      public Builder setTorpedoNum(int value) {
        bitField0_ |= 0x00000002;
        torpedoNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 torpedoNum = 2;</code>
       *
       * <pre>
       * 鱼雷数量
       * </pre>
       */
      public Builder clearTorpedoNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        torpedoNum_ = 0;
        onChanged();
        return this;
      }

      private float angle_ ;
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public boolean hasAngle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public float getAngle() {
        return angle_;
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public Builder setAngle(float value) {
        bitField0_ |= 0x00000004;
        angle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float angle = 3;</code>
       *
       * <pre>
       * 角度
       * </pre>
       */
      public Builder clearAngle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        angle_ = 0F;
        onChanged();
        return this;
      }

      private long playerId_ ;
      /**
       * <code>optional int64 playerId = 4;</code>
       *
       * <pre>
       * 使用鱼雷的玩家id
       * </pre>
       */
      public boolean hasPlayerId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 playerId = 4;</code>
       *
       * <pre>
       * 使用鱼雷的玩家id
       * </pre>
       */
      public long getPlayerId() {
        return playerId_;
      }
      /**
       * <code>optional int64 playerId = 4;</code>
       *
       * <pre>
       * 使用鱼雷的玩家id
       * </pre>
       */
      public Builder setPlayerId(long value) {
        bitField0_ |= 0x00000008;
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 playerId = 4;</code>
       *
       * <pre>
       * 使用鱼雷的玩家id
       * </pre>
       */
      public Builder clearPlayerId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerId_ = 0L;
        onChanged();
        return this;
      }

      private long money_ ;
      /**
       * <code>optional int64 money = 5;</code>
       *
       * <pre>
       * 鱼雷爆出的金币数量
       * </pre>
       */
      public boolean hasMoney() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 money = 5;</code>
       *
       * <pre>
       * 鱼雷爆出的金币数量
       * </pre>
       */
      public long getMoney() {
        return money_;
      }
      /**
       * <code>optional int64 money = 5;</code>
       *
       * <pre>
       * 鱼雷爆出的金币数量
       * </pre>
       */
      public Builder setMoney(long value) {
        bitField0_ |= 0x00000010;
        money_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 money = 5;</code>
       *
       * <pre>
       * 鱼雷爆出的金币数量
       * </pre>
       */
      public Builder clearMoney() {
        bitField0_ = (bitField0_ & ~0x00000010);
        money_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoResponse)
    }

    static {
      defaultInstance = new FishingChallengeUseTorpedoResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.maple.game.osee.proto.fishing.FishingChallengeUseTorpedoResponse)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomInfoProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomInfoProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengePlayerInfoProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengePlayerInfoProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishInfoProto_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishInfoProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCreateRoomRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCreateRoomRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeQuickJoinRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeQuickJoinRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoListResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoListResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshFishesResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshFishesResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishTideResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishTideResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeReactiveRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeReactiveRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchBossFishResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchBossFishResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshBossResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshBossResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeSeatRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeSeatRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!TtmyFishingChallengeMessage.proto\022!com" +
      ".maple.game.osee.proto.fishing\032\024OseePubl" +
      "icData.proto\"m\n\035FishingChallengeRoomInfo" +
      "Proto\022\020\n\010roomCode\030\001 \001(\005\022\017\n\007headImg\030\002 \003(\t" +
      "\022\014\n\004boss\030\003 \001(\005\022\013\n\003vip\030\004 \001(\010\022\016\n\006verify\030\005 " +
      "\001(\010\"\376\001\n\037FishingChallengePlayerInfoProto\022" +
      "\020\n\010playerId\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\021\n\theadI" +
      "ndex\030\003 \001(\005\022\017\n\007headUrl\030\004 \001(\t\022\013\n\003sex\030\005 \001(\005" +
      "\022\r\n\005money\030\006 \001(\003\022\014\n\004seat\030\007 \001(\005\022\016\n\006online\030" +
      "\010 \001(\010\022\020\n\010vipLevel\030\t \001(\005\022\021\n\tviewIndex\030\n \001",
      "(\005\022\024\n\014batteryLevel\030\013 \001(\005\022\023\n\013batteryMult\030" +
      "\014 \001(\005\022\r\n\005level\030\r \001(\005\"x\n\035FishingChallenge" +
      "FishInfoProto\022\n\n\002id\030\001 \001(\003\022\016\n\006fishId\030\002 \001(" +
      "\003\022\017\n\007routeId\030\003 \001(\003\022\026\n\016clientLifeTime\030e \001" +
      "(\002\022\022\n\ncreateTime\030f \001(\003\"3\n\037FishingChallen" +
      "geRoomListRequest\022\020\n\010roomType\030\001 \001(\005\"\210\001\n " +
      "FishingChallengeRoomListResponse\022R\n\010room" +
      "List\030\001 \003(\0132@.com.maple.game.osee.proto.f" +
      "ishing.FishingChallengeRoomInfoProto\022\020\n\010" +
      "roomType\030\002 \001(\005\"9\n!FishingChallengeCreate",
      "RoomRequest\022\024\n\014roomPassword\030\001 \001(\t\"[\n\037Fis" +
      "hingChallengeJoinRoomRequest\022\020\n\010roomCode" +
      "\030\001 \001(\005\022\024\n\014roomPassword\030\002 \001(\t\022\020\n\010roomType" +
      "\030\003 \001(\005\"S\n FishingChallengeJoinRoomRespon" +
      "se\022\020\n\010roomCode\030\001 \001(\005\022\013\n\003vip\030\002 \001(\010\022\020\n\010roo" +
      "mType\030\003 \001(\005\"!\n\037FishingChallengeExitRoomR" +
      "equest\"4\n FishingChallengeExitRoomRespon" +
      "se\022\020\n\010playerId\030\001 \001(\003\"\"\n FishingChallenge" +
      "QuickJoinRequest\"\200\001\n&FishingChallengeRoo" +
      "mPlayerInfoResponse\022V\n\nplayerInfo\030\001 \001(\0132",
      "B.com.maple.game.osee.proto.fishing.Fish" +
      "ingChallengePlayerInfoProto\"\205\001\n*FishingC" +
      "hallengeRoomPlayerInfoListResponse\022W\n\013pl" +
      "ayerInfos\030\001 \003(\0132B.com.maple.game.osee.pr" +
      "oto.fishing.FishingChallengePlayerInfoPr" +
      "oto\"C\n(FishingChallengeChangeBatteryView" +
      "Request\022\027\n\017targetViewIndex\030\001 \001(\005\"P\n)Fish" +
      "ingChallengeChangeBatteryViewResponse\022\020\n" +
      "\010playerId\030\001 \001(\003\022\021\n\tviewIndex\030\002 \001(\005\"@\n)Fi" +
      "shingChallengeChangeBatteryLevelRequest\022",
      "\023\n\013targetLevel\030\001 \001(\005\"M\n*FishingChallenge" +
      "ChangeBatteryLevelResponse\022\020\n\010playerId\030\001" +
      " \001(\003\022\r\n\005level\030\002 \001(\005\"L\n\033FishingChallengeF" +
      "ireRequest\022\016\n\006fireId\030\001 \001(\003\022\016\n\006fishId\030\002 \001" +
      "(\003\022\r\n\005angle\030\003 \001(\002\"r\n\034FishingChallengeFir" +
      "eResponse\022\016\n\006fireId\030\001 \001(\003\022\016\n\006fishId\030\002 \001(" +
      "\003\022\r\n\005angle\030\003 \001(\002\022\021\n\trestMoney\030e \001(\003\022\020\n\010p" +
      "layerId\030f \001(\003\"B\n FishingChallengeFightFi" +
      "shRequest\022\016\n\006fireId\030\001 \001(\003\022\016\n\006fishId\030\002 \003(" +
      "\003\"\272\001\n!FishingChallengeFightFishResponse\022",
      "\016\n\006fishId\030\001 \001(\003\022\020\n\010playerId\030\002 \001(\003\022\021\n\tres" +
      "tMoney\030\003 \001(\003\022\021\n\tdropMoney\030\004 \001(\003\022;\n\tdropI" +
      "tems\030\005 \003(\0132(.com.maple.game.osee.proto.I" +
      "temDataProto\022\020\n\010multiple\030\006 \001(\003\"|\n%Fishin" +
      "gChallengeRefreshFishesResponse\022S\n\tfishI" +
      "nfos\030\001 \003(\0132@.com.maple.game.osee.proto.f" +
      "ishing.FishingChallengeFishInfoProto\"$\n\"" +
      "FishingChallengeSynchroniseRequest\"z\n#Fi" +
      "shingChallengeSynchroniseResponse\022S\n\tfis" +
      "hInfos\030\001 \003(\0132@.com.maple.game.osee.proto",
      ".fishing.FishingChallengeFishInfoProto\"\"" +
      "\n FishingChallengeFishTideResponse\"!\n\037Fi" +
      "shingChallengeReactiveRequest\"2\n\037Fishing" +
      "ChallengeUseSkillRequest\022\017\n\007skillId\030\001 \001(" +
      "\005\"\243\001\n FishingChallengeUseSkillResponse\022\017" +
      "\n\007skillId\030\001 \001(\003\022\020\n\010duration\030\002 \001(\005\022\020\n\010pla" +
      "yerId\030\003 \001(\003\022\017\n\007fishIds\030\004 \003(\003\022\021\n\trestMone" +
      "y\030\005 \001(\003\022\021\n\tdropMoney\030\006 \001(\003\022\023\n\013skillFishI" +
      "d\030\007 \001(\003\"\212\001\n%FishingChallengeCatchBossFis" +
      "hResponse\022\020\n\010fishName\030\001 \001(\t\022\r\n\005money\030\002 \001",
      "(\003\022\022\n\nplayerName\030\003 \001(\t\022\026\n\016playerVipLevel" +
      "\030\004 \001(\005\022\024\n\014batteryLevel\030\005 \001(\005\"c\n\'FishingC" +
      "hallengeCatchSpecialFishRequest\022\017\n\007fishI" +
      "ds\030\001 \003(\003\022\025\n\rspecialFishId\030\002 \001(\003\022\020\n\010playe" +
      "rId\030\003 \001(\003\"\212\001\n(FishingChallengeCatchSpeci" +
      "alFishResponse\022\017\n\007fishIds\030\001 \003(\003\022\025\n\rspeci" +
      "alFishId\030\002 \001(\003\022\020\n\010playerId\030\003 \001(\003\022\021\n\trest" +
      "Money\030\004 \001(\003\022\021\n\tdropMoney\030\005 \001(\003\"%\n#Fishin" +
      "gChallengeUseBossBugleRequest\"8\n$Fishing" +
      "ChallengeUseBossBugleResponse\022\020\n\010playerI",
      "d\030\001 \001(\003\"%\n#FishingChallengeRefreshBossRe" +
      "sponse\"1\n!FishingChallengeChangeSeatRequ" +
      "est\022\014\n\004seat\030\001 \001(\005\"Y\n!FishingChallengeUse" +
      "TorpedoRequest\022\021\n\ttorpedoId\030\001 \001(\005\022\022\n\ntor" +
      "pedoNum\030\002 \001(\005\022\r\n\005angle\030\003 \001(\002\"{\n\"FishingC" +
      "hallengeUseTorpedoResponse\022\021\n\ttorpedoId\030" +
      "\001 \001(\005\022\022\n\ntorpedoNum\030\002 \001(\005\022\r\n\005angle\030\003 \001(\002" +
      "\022\020\n\010playerId\030\004 \001(\003\022\r\n\005money\030\005 \001(\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.maple.game.osee.proto.OseePublicData.getDescriptor(),
        }, assigner);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomInfoProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomInfoProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomInfoProto_descriptor,
        new java.lang.String[] { "RoomCode", "HeadImg", "Boss", "Vip", "Verify", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengePlayerInfoProto_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengePlayerInfoProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengePlayerInfoProto_descriptor,
        new java.lang.String[] { "PlayerId", "Name", "HeadIndex", "HeadUrl", "Sex", "Money", "Seat", "Online", "VipLevel", "ViewIndex", "BatteryLevel", "BatteryMult", "Level", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishInfoProto_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishInfoProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishInfoProto_descriptor,
        new java.lang.String[] { "Id", "FishId", "RouteId", "ClientLifeTime", "CreateTime", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListRequest_descriptor,
        new java.lang.String[] { "RoomType", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListResponse_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomListResponse_descriptor,
        new java.lang.String[] { "RoomList", "RoomType", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCreateRoomRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCreateRoomRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCreateRoomRequest_descriptor,
        new java.lang.String[] { "RoomPassword", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomRequest_descriptor,
        new java.lang.String[] { "RoomCode", "RoomPassword", "RoomType", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomResponse_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeJoinRoomResponse_descriptor,
        new java.lang.String[] { "RoomCode", "Vip", "RoomType", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomRequest_descriptor,
        new java.lang.String[] { });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomResponse_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeExitRoomResponse_descriptor,
        new java.lang.String[] { "PlayerId", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeQuickJoinRequest_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeQuickJoinRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeQuickJoinRequest_descriptor,
        new java.lang.String[] { });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoResponse_descriptor,
        new java.lang.String[] { "PlayerInfo", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoListResponse_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoListResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRoomPlayerInfoListResponse_descriptor,
        new java.lang.String[] { "PlayerInfos", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewRequest_descriptor,
        new java.lang.String[] { "TargetViewIndex", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewResponse_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryViewResponse_descriptor,
        new java.lang.String[] { "PlayerId", "ViewIndex", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelRequest_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelRequest_descriptor,
        new java.lang.String[] { "TargetLevel", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelResponse_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeBatteryLevelResponse_descriptor,
        new java.lang.String[] { "PlayerId", "Level", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireRequest_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireRequest_descriptor,
        new java.lang.String[] { "FireId", "FishId", "Angle", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireResponse_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFireResponse_descriptor,
        new java.lang.String[] { "FireId", "FishId", "Angle", "RestMoney", "PlayerId", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishRequest_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishRequest_descriptor,
        new java.lang.String[] { "FireId", "FishId", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishResponse_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFightFishResponse_descriptor,
        new java.lang.String[] { "FishId", "PlayerId", "RestMoney", "DropMoney", "DropItems", "Multiple", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshFishesResponse_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshFishesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshFishesResponse_descriptor,
        new java.lang.String[] { "FishInfos", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseRequest_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseRequest_descriptor,
        new java.lang.String[] { });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseResponse_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeSynchroniseResponse_descriptor,
        new java.lang.String[] { "FishInfos", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishTideResponse_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishTideResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeFishTideResponse_descriptor,
        new java.lang.String[] { });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeReactiveRequest_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeReactiveRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeReactiveRequest_descriptor,
        new java.lang.String[] { });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillRequest_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillRequest_descriptor,
        new java.lang.String[] { "SkillId", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillResponse_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseSkillResponse_descriptor,
        new java.lang.String[] { "SkillId", "Duration", "PlayerId", "FishIds", "RestMoney", "DropMoney", "SkillFishId", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchBossFishResponse_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchBossFishResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchBossFishResponse_descriptor,
        new java.lang.String[] { "FishName", "Money", "PlayerName", "PlayerVipLevel", "BatteryLevel", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishRequest_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishRequest_descriptor,
        new java.lang.String[] { "FishIds", "SpecialFishId", "PlayerId", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishResponse_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeCatchSpecialFishResponse_descriptor,
        new java.lang.String[] { "FishIds", "SpecialFishId", "PlayerId", "RestMoney", "DropMoney", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleRequest_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleRequest_descriptor,
        new java.lang.String[] { });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleResponse_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseBossBugleResponse_descriptor,
        new java.lang.String[] { "PlayerId", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshBossResponse_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshBossResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeRefreshBossResponse_descriptor,
        new java.lang.String[] { });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeSeatRequest_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeSeatRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeChangeSeatRequest_descriptor,
        new java.lang.String[] { "Seat", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoRequest_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoRequest_descriptor,
        new java.lang.String[] { "TorpedoId", "TorpedoNum", "Angle", });
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoResponse_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_maple_game_osee_proto_fishing_FishingChallengeUseTorpedoResponse_descriptor,
        new java.lang.String[] { "TorpedoId", "TorpedoNum", "Angle", "PlayerId", "Money", });
    com.maple.game.osee.proto.OseePublicData.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
